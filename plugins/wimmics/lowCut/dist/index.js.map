{"version":3,"file":"index.js","sources":["index.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/** @typedef {import('@webaudiomodules/api').WamDescriptor} WamDescriptor */\n/** @typedef {import('@webaudiomodules/api').WamNode} WamNode */\n/** @template T @typedef {import('@webaudiomodules/api').WebAudioModule} IWebAudioModule<T> */\n\n/** @implements {IWebAudioModule<WamNode>} */\nclass WebAudioModule {\n  static get isWebAudioModuleConstructor() {\n    return true;\n  }\n\n  /**\n   * @param {string} groupId\n   * @param {BaseAudioContext} audioContext\n   * @param {any} [initialState]\n   * @returns {Promise<IWebAudioModule<any>>}\n   */\n  static createInstance(groupId, audioContext, initialState) {\n    return new this(groupId, audioContext).initialize(initialState);\n  }\n\n  /** \n   * @param {string} groupId\n   * @param {BaseAudioContext} audioContext \n   */\n  constructor(groupId, audioContext) {\n    this._groupId = groupId;\n    this._audioContext = audioContext;\n    this._initialized = false;\n    /** @type {WamNode} */\n    this._audioNode = undefined;\n    this._timestamp = performance.now();\n    /**\n     * Url to load the plugin's GUI HTML\n     * @type {string}\n     */\n    this._guiModuleUrl = undefined;\n    /**\n     * Url to load the plugin's `descriptor.json`\n     * @type {string}\n     */\n    this._descriptorUrl = './descriptor.json';\n    /** @type {WamDescriptor} */\n    this._descriptor = {\n      name: \"WebAudioModule_\".concat(this.constructor.name),\n      vendor: 'WebAudioModuleVendor',\n      description: '',\n      version: '0.0.0',\n      apiVersion: '2.0.0',\n      thumbnail: '',\n      keywords: [],\n      isInstrument: false,\n      website: '',\n      hasAudioInput: true,\n      hasAudioOutput: true,\n      hasAutomationInput: true,\n      hasAutomationOutput: true,\n      hasMidiInput: true,\n      hasMidiOutput: true,\n      hasMpeInput: true,\n      hasMpeOutput: true,\n      hasOscInput: true,\n      hasOscOutput: true,\n      hasSysexInput: true,\n      hasSysexOutput: true\n    };\n  }\n  get isWebAudioModule() {\n    return true;\n  }\n  get groupId() {\n    return this._groupId;\n  }\n  get moduleId() {\n    return this.vendor + this.name;\n  }\n  get instanceId() {\n    return this.moduleId + this._timestamp;\n  }\n  get descriptor() {\n    return this._descriptor;\n  }\n  get name() {\n    return this.descriptor.name;\n  }\n  get vendor() {\n    return this.descriptor.vendor;\n  }\n  get audioContext() {\n    return this._audioContext;\n  }\n  get audioNode() {\n    if (!this.initialized) console.warn('WAM should be initialized before getting the audioNode');\n    return this._audioNode;\n  }\n  set audioNode(node) {\n    this._audioNode = node;\n  }\n  get initialized() {\n    return this._initialized;\n  }\n  set initialized(value) {\n    this._initialized = value;\n  }\n\n  /**\n   * @param {any} [initialState]\n   * @returns {Promise<WamNode>}\n   */\n  createAudioNode(initialState) {\n    return _asyncToGenerator(function* () {\n      // should return a subclass of WamNode\n      throw new TypeError('createAudioNode() not provided');\n    })();\n  }\n\n  /**\n   * @param {any} [state]\n   * @returns {Promise<WebAudioModule>}\n   */\n  initialize(state) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // await this._loadDescriptor();\n      if (!_this._audioNode) _this.audioNode = yield _this.createAudioNode();\n      _this.initialized = true;\n      return _this;\n    })();\n  }\n  _loadGui() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var url = _this2._guiModuleUrl;\n      if (!url) throw new TypeError('Gui module not found');\n      // @ts-ignore\n      return import( /* webpackIgnore: true */url);\n    })();\n  }\n  _loadDescriptor() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      var url = _this3._descriptorUrl;\n      if (!url) throw new TypeError('Descriptor not found');\n      var response = yield fetch(url);\n      var descriptor = yield response.json();\n      Object.assign(_this3._descriptor, descriptor);\n      return _this3._descriptor;\n    })();\n  }\n\n  /**\n   * @returns {Promise<HTMLElement>}\n   */\n  createGui() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.initialized) console.warn('Plugin should be initialized before getting the gui');\n      // Do not fail if no gui is present, just return undefined\n      if (!_this4._guiModuleUrl) return undefined;\n      var {\n        createElement\n      } = yield _this4._loadGui();\n      return createElement(_this4);\n    })();\n  }\n  destroyGui() {}\n}\n\n/** @typedef {import('@webaudiomodules/api').WamNode} WamNode */\n/** @typedef {import('@webaudiomodules/api').WebAudioModule} WebAudioModule */\n\n/**\n * @implements {WamNode}\n */\nclass CompositeAudioNode extends GainNode {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"_output\", undefined);\n    _defineProperty(this, \"_wamNode\", undefined);\n  }\n  get groupId() {\n    return this._wamNode.groupId;\n  }\n  get moduleId() {\n    return this._wamNode.moduleId;\n  }\n  get instanceId() {\n    return this._wamNode.instanceId;\n  }\n  get module() {\n    return this._wamNode.module;\n  }\n\n  /**\n   * @param {Parameters<WamNode['addEventListener']>} args\n   */\n  addEventListener() {\n    return this._wamNode.addEventListener(...arguments);\n  }\n\n  /**\n   * @param {Parameters<WamNode['removeEventListener']>} args\n   */\n  removeEventListener() {\n    return this._wamNode.removeEventListener(...arguments);\n  }\n\n  /**\n   * @param {Parameters<WamNode['dispatchEvent']>} args\n   */\n  dispatchEvent() {\n    return this._wamNode.dispatchEvent(...arguments);\n  }\n\n  /**\n   * @param {Parameters<WamNode['getParameterInfo']>} args\n   */\n  getParameterInfo() {\n    return this._wamNode.getParameterInfo(...arguments);\n  }\n\n  /**\n   * @param {Parameters<WamNode['getParameterValues']>} args\n   */\n  getParameterValues() {\n    return this._wamNode.getParameterValues(...arguments);\n  }\n\n  /**\n   * @param {Parameters<WamNode['setParameterValues']>} args\n   */\n  setParameterValues() {\n    return this._wamNode.setParameterValues(...arguments);\n  }\n  getState() {\n    return this._wamNode.getState();\n  }\n\n  /**\n   * @param {Parameters<WamNode['setState']>} args\n   */\n  setState() {\n    return this._wamNode.setState(...arguments);\n  }\n  getCompensationDelay() {\n    return this._wamNode.getCompensationDelay();\n  }\n\n  /**\n   * @param {Parameters<WamNode['scheduleEvents']>} args\n   */\n  scheduleEvents() {\n    return this._wamNode.scheduleEvents(...arguments);\n  }\n  clearEvents() {\n    return this._wamNode.clearEvents();\n  }\n\n  /**\n   * @param {Parameters<WamNode['connectEvents']>} args\n   */\n  connectEvents() {\n    return this._wamNode.connectEvents(...arguments);\n  }\n\n  /**\n   * @param {Parameters<WamNode['disconnectEvents']>} args\n   */\n  disconnectEvents() {\n    return this._wamNode.disconnectEvents(...arguments);\n  }\n  destroy() {\n    return this._wamNode.destroy();\n  }\n\n  /**\n   * @type {AudioNode}\n   */\n\n  set channelCount(count) {\n    if (this._output) this._output.channelCount = count;else super.channelCount = count;\n  }\n  get channelCount() {\n    if (this._output) return this._output.channelCount;\n    return super.channelCount;\n  }\n  set channelCountMode(mode) {\n    if (this._output) this._output.channelCountMode = mode;else super.channelCountMode = mode;\n  }\n  get channelCountMode() {\n    if (this._output) return this._output.channelCountMode;\n    return super.channelCountMode;\n  }\n  set channelInterpretation(interpretation) {\n    if (this._output) this._output.channelInterpretation = interpretation;else super.channelInterpretation = interpretation;\n  }\n  get channelInterpretation() {\n    if (this._output) return this._output.channelInterpretation;\n    return super.channelInterpretation;\n  }\n  get numberOfInputs() {\n    return super.numberOfInputs;\n  }\n  get numberOfOutputs() {\n    if (this._output) return this._output.numberOfOutputs;\n    return super.numberOfOutputs;\n  }\n  get gain() {\n    return undefined;\n  }\n  connect() {\n    // @ts-ignore\n    if (this._output && this._output !== this) return this._output.connect(...arguments);\n    // @ts-ignore\n    return super.connect(...arguments);\n  }\n  disconnect() {\n    // @ts-ignore\n    if (this._output && this._output !== this) return this._output.disconnect(...arguments);\n    // @ts-ignore\n    return super.disconnect(...arguments);\n  }\n}\n\n/**\r\n * Take a function, stringify it and inject to an AudioWorklet with parameters.\r\n *\r\n * @param {AudioWorklet} audioWorklet\r\n * @param {(...args: any[]) => any} processorFunction\r\n * @param {any[]} [injection]\r\n * @returns {Promise<void>}\r\n */\nvar addFunctionModule = function addFunctionModule(audioWorklet, processorFunction) {\n  for (var _len = arguments.length, injection = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    injection[_key - 2] = arguments[_key];\n  }\n  var text = \"(\".concat(processorFunction.toString(), \")(\").concat(injection.map(s => JSON.stringify(s)).join(', '), \");\");\n  var url = URL.createObjectURL(new Blob([text], {\n    type: 'text/javascript'\n  }));\n  return audioWorklet.addModule(url);\n};\n\n/** @typedef {import('@webaudiomodules/api').WamProcessor} WamProcessor */\n/** @typedef {import('@webaudiomodules/api').WamParameterInfoMap} WamParameterInfoMap */\n/** @typedef {import('@webaudiomodules/api').WamParameterDataMap} WamParameterValueMap */\n/** @typedef {import('@webaudiomodules/api').WamEvent} WamEvent */\n/** @typedef {import('./types').ParamMgrOptions} ParamMgrProcessorOptions */\n/** @typedef {import('./TypedAudioWorklet').AudioWorkletGlobalScope} AudioWorkletGlobalScope */\n/** @typedef {import('./TypedAudioWorklet').TypedAudioWorkletProcessor} AudioWorkletProcessor */\n/** @template M @typedef {import('./types').MessagePortRequest<M>} MessagePortRequest */\n/** @template M @typedef {import('./types').MessagePortResponse<M>} MessagePortResponse */\n/** @typedef {import('./types').ParamMgrCallFromProcessor} ParamMgrCallFromProcessor */\n/** @typedef {import('./types').ParamMgrCallToProcessor} ParamMgrCallToProcessor */\n/** @typedef {import('./types').ParamMgrAudioWorkletOptions} ParamMgrAudioWorkletOptions */\n/** @typedef {import('./types').ParametersMapping} ParametersMapping */\n\n/**\n * Main function to stringify as a worklet.\n *\n * @param {string} moduleId processor identifier\n * @param {WamParameterInfoMap} paramsConfig parameterDescriptors\n */\nvar processor = (moduleId, paramsConfig) => {\n  /** @type {AudioWorkletGlobalScope} */\n  // @ts-ignore\n  var audioWorkletGlobalScope = globalThis;\n  var {\n    AudioWorkletProcessor,\n    registerProcessor,\n    webAudioModules\n  } = audioWorkletGlobalScope;\n  var supportSharedArrayBuffer = !!globalThis.SharedArrayBuffer;\n  var SharedArrayBuffer = globalThis.SharedArrayBuffer || globalThis.ArrayBuffer;\n  var normExp = (x, e) => e === 0 ? x : x ** 1.5 ** -e;\n  var normalizeE = function normalizeE(x, min, max) {\n    var e = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    return min === 0 && max === 1 ? normExp(x, e) : normExp((x - min) / (max - min) || 0, e);\n  };\n  var normalize = (x, min, max) => min === 0 && max === 1 ? x : (x - min) / (max - min) || 0;\n  var denormalize = (x, min, max) => min === 0 && max === 1 ? x : x * (max - min) + min;\n  var mapValue = (x, eMin, eMax, sMin, sMax, tMin, tMax) => denormalize(normalize(normalize(Math.min(sMax, Math.max(sMin, x)), eMin, eMax), normalize(sMin, eMin, eMax), normalize(sMax, eMin, eMax)), tMin, tMax);\n\n  /**\n   * @typedef {MessagePortRequest<ParamMgrCallToProcessor> & MessagePortResponse<ParamMgrCallFromProcessor>} MsgIn\n   * @typedef {MessagePortResponse<ParamMgrCallToProcessor> & MessagePortRequest<ParamMgrCallFromProcessor>} MsgOut\n   */\n  /**\n   * `ParamMgrNode`'s `AudioWorkletProcessor`\n   *\n   * @extends {AudioWorkletProcessor<MsgIn, MsgOut>}\n   * @implements {WamProcessor}\n   * @implements {ParamMgrCallToProcessor}\n   */\n  class ParamMgrProcessor extends AudioWorkletProcessor {\n    static get parameterDescriptors() {\n      return Object.entries(paramsConfig).map(_ref => {\n        var [name, {\n          defaultValue,\n          minValue,\n          maxValue\n        }] = _ref;\n        return {\n          name,\n          defaultValue,\n          minValue,\n          maxValue\n        };\n      });\n    }\n\n    /**\n     * @param {ParamMgrProcessorOptions} options\n     */\n    constructor(options) {\n      var _this;\n      super(options);\n      _this = this;\n      this.destroyed = false;\n      this.supportSharedArrayBuffer = supportSharedArrayBuffer;\n      var {\n        paramsMapping,\n        internalParamsMinValues,\n        internalParams,\n        groupId,\n        instanceId\n      } = options.processorOptions;\n      this.groupId = groupId;\n      this.moduleId = moduleId;\n      this.instanceId = instanceId;\n      this.internalParamsMinValues = internalParamsMinValues;\n      this.paramsConfig = paramsConfig;\n      this.paramsMapping = paramsMapping;\n      /** @type {Record<string, number>} */\n      this.paramsValues = {};\n      Object.entries(paramsConfig).forEach(_ref2 => {\n        var [name, {\n          defaultValue\n        }] = _ref2;\n        this.paramsValues[name] = defaultValue;\n      });\n      this.internalParams = internalParams;\n      this.internalParamsCount = this.internalParams.length;\n      this.buffer = new SharedArrayBuffer((this.internalParamsCount + 1) * Float32Array.BYTES_PER_ELEMENT);\n      this.$lock = new Int32Array(this.buffer, 0, 1);\n      this.$internalParamsBuffer = new Float32Array(this.buffer, 4, this.internalParamsCount);\n      /** @type {WamEvent[]} */\n      this.eventQueue = [];\n\n      /** @type {(event: WamEvent) => any} */\n      this.handleEvent = null;\n      audioWorkletGlobalScope.webAudioModules.addWam(this);\n      this.messagePortRequestId = -1;\n      /** @type {Record<number, ((...args: any[]) => any)>} */\n      var resolves = {};\n      /** @type {Record<number, ((...args: any[]) => any)>} */\n      var rejects = {};\n      /**\n       * @param {keyof ParamMgrCallFromProcessor} call\n       * @param {any} args\n       */\n      this.call = function (call) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return new Promise((resolve, reject) => {\n          var id = _this.messagePortRequestId--;\n          resolves[id] = resolve;\n          rejects[id] = reject;\n          _this.port.postMessage({\n            id,\n            call,\n            args\n          });\n        });\n      };\n      this.handleMessage = _ref3 => {\n        var {\n          data\n        } = _ref3;\n        var {\n          id,\n          call,\n          args,\n          value,\n          error\n        } = data;\n        if (call) {\n          /** @type {any} */\n          var r = {\n            id\n          };\n          try {\n            r.value = this[call](...args);\n          } catch (e) {\n            r.error = e;\n          }\n          this.port.postMessage(r);\n        } else {\n          if (error) {\n            if (rejects[id]) rejects[id](error);\n            delete rejects[id];\n            return;\n          }\n          if (resolves[id]) {\n            resolves[id](value);\n            delete resolves[id];\n          }\n        }\n      };\n      this.port.start();\n      this.port.addEventListener('message', this.handleMessage);\n    }\n\n    /**\n     * @param {ParametersMapping} mapping\n     */\n    setParamsMapping(mapping) {\n      this.paramsMapping = mapping;\n    }\n    getBuffer() {\n      return {\n        lock: this.$lock,\n        paramsBuffer: this.$internalParamsBuffer\n      };\n    }\n    getCompensationDelay() {\n      return 128;\n    }\n\n    /**\n     * @param {string[]} parameterIdQuery\n     */\n    getParameterInfo() {\n      for (var _len2 = arguments.length, parameterIdQuery = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        parameterIdQuery[_key2] = arguments[_key2];\n      }\n      if (parameterIdQuery.length === 0) parameterIdQuery = Object.keys(this.paramsConfig);\n      /** @type {WamParameterInfoMap} */\n      var parameterInfo = {};\n      parameterIdQuery.forEach(parameterId => {\n        parameterInfo[parameterId] = this.paramsConfig[parameterId];\n      });\n      return parameterInfo;\n    }\n\n    /**\n     * @param {boolean} [normalized]\n     * @param {string[]} parameterIdQuery\n     */\n    getParameterValues(normalized) {\n      for (var _len3 = arguments.length, parameterIdQuery = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        parameterIdQuery[_key3 - 1] = arguments[_key3];\n      }\n      if (parameterIdQuery.length === 0) parameterIdQuery = Object.keys(this.paramsConfig);\n      /** @type {WamParameterValueMap} */\n      var parameterValues = {};\n      parameterIdQuery.forEach(parameterId => {\n        if (!(parameterId in this.paramsValues)) return;\n        var {\n          minValue,\n          maxValue,\n          exponent\n        } = this.paramsConfig[parameterId];\n        var value = this.paramsValues[parameterId];\n        parameterValues[parameterId] = {\n          id: parameterId,\n          value: normalized ? normalizeE(value, minValue, maxValue, exponent) : value,\n          normalized\n        };\n      });\n      return parameterValues;\n    }\n\n    /**\n     * @param {WamEvent[]} events\n     */\n    scheduleEvents() {\n      this.eventQueue.push(...arguments);\n      var {\n        currentTime\n      } = audioWorkletGlobalScope;\n      this.eventQueue.sort((a, b) => (a.time || currentTime) - (b.time || currentTime));\n    }\n\n    /**\n     * @param {WamEvent[]} events\n     */\n    emitEvents() {\n      for (var _len4 = arguments.length, events = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        events[_key4] = arguments[_key4];\n      }\n      webAudioModules.emitEvents(this, ...events);\n    }\n    clearEvents() {\n      this.eventQueue = [];\n    }\n    lock() {\n      if (globalThis.Atomics) Atomics.store(this.$lock, 0, 1);\n    }\n    unlock() {\n      if (globalThis.Atomics) Atomics.store(this.$lock, 0, 0);\n    }\n\n    /**\n     * Main process\n     *\n     * @param {Float32Array[][]} inputs\n     * @param {Float32Array[][]} outputs\n     * @param {Record<string, Float32Array>} parameters\n     */\n    process(inputs, outputs, parameters) {\n      if (this.destroyed) return false;\n      var outputOffset = 1;\n      this.lock();\n      Object.entries(this.paramsConfig).forEach(_ref4 => {\n        var [name, {\n          minValue,\n          maxValue\n        }] = _ref4;\n        var raw = parameters[name];\n        if (name in this.paramsValues) this.paramsValues[name] = raw[raw.length - 1]; // Store to local temporary\n        if (!this.paramsMapping[name]) return; // No need to output\n        Object.entries(this.paramsMapping[name]).forEach(_ref5 => {\n          var [targetName, targetMapping] = _ref5;\n          var j = this.internalParams.indexOf(targetName);\n          if (j === -1) return;\n          var intrinsicValue = this.internalParamsMinValues[j]; // Output will be added to target intrinsicValue\n          var {\n            sourceRange,\n            targetRange\n          } = targetMapping;\n          var [sMin, sMax] = sourceRange;\n          var [tMin, tMax] = targetRange;\n          var out;\n          if (minValue !== tMin || maxValue !== tMax || minValue !== sMin || maxValue !== sMax) {\n            // need to calculate with mapping\n            out = raw.map(v => {\n              var mappedValue = mapValue(v, minValue, maxValue, sMin, sMax, tMin, tMax);\n              return mappedValue - intrinsicValue;\n            });\n          } else if (intrinsicValue) {\n            // need to correct with intrinsicValue\n            out = raw.map(v => v - intrinsicValue);\n          } else {\n            // No need to modify\n            out = raw;\n          }\n          if (out.length === 1) outputs[j + outputOffset][0].fill(out[0]);else outputs[j + outputOffset][0].set(out);\n          this.$internalParamsBuffer[j] = out[0];\n        });\n      });\n      this.unlock();\n      if (!this.supportSharedArrayBuffer) {\n        this.call('setBuffer', {\n          lock: this.$lock,\n          paramsBuffer: this.$internalParamsBuffer\n        });\n      }\n      var {\n        currentTime\n      } = audioWorkletGlobalScope;\n      var $event;\n      for ($event = 0; $event < this.eventQueue.length; $event++) {\n        var event = this.eventQueue[$event];\n        if (event.time && event.time > currentTime) break;\n        if (typeof this.handleEvent === 'function') this.handleEvent(event);\n        this.call('dispatchWamEvent', event);\n      }\n      if ($event) this.eventQueue.splice(0, $event);\n      return true;\n    }\n\n    /**\n     * @param {string} wamInstanceId\n     * @param {number} [output]\n     */\n    connectEvents(wamInstanceId, output) {\n      webAudioModules.connectEvents(this.groupId, this.instanceId, wamInstanceId, output);\n    }\n\n    /**\n     * @param {string} [wamInstanceId]\n     * @param {number} [output]\n     */\n    disconnectEvents(wamInstanceId, output) {\n      if (typeof wamInstanceId === 'undefined') {\n        webAudioModules.disconnectEvents(this.groupId, this.instanceId);\n        return;\n      }\n      webAudioModules.disconnectEvents(this.groupId, this.instanceId, wamInstanceId, output);\n    }\n    destroy() {\n      audioWorkletGlobalScope.webAudioModules.removeWam(this);\n      this.destroyed = true;\n      this.port.close();\n    }\n  }\n  try {\n    registerProcessor(moduleId, ParamMgrProcessor);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(error);\n  }\n};\n\n/** @typedef {import('@webaudiomodules/api').WamParameterInfo} IWamParameterInfo */\n/** @typedef {typeof import('@webaudiomodules/api').WamParameterInfo} WamParameterInfoConstructor */\n/** @typedef {import('@webaudiomodules/api').WamParameterType} WamParameterType */\n/** @typedef {import('@webaudiomodules/api').WamParameterConfiguration} WamParameterConfiguration */\n/** @typedef {import('@webaudiomodules/api').AudioWorkletGlobalScope} AudioWorkletGlobalScope */\n/** @typedef {import('./types').WamSDKBaseModuleScope} WamSDKBaseModuleScope */\n\n/**\n * @param {string} [moduleId]\n * @returns {WamParameterInfoConstructor}\n */\nvar getWamParameterInfo = moduleId => {\n  /** @type {AudioWorkletGlobalScope} */\n  // @ts-ignore\n  var audioWorkletGlobalScope = globalThis;\n\n  /**\n   * @param {number} x\n   * @param {number} e\n   */\n  var normExp = (x, e) => e === 0 ? x : x ** 1.5 ** -e;\n\n  /**\n   * @param {number} x\n   * @param {number} e\n   */\n  var denormExp = (x, e) => e === 0 ? x : x ** 1.5 ** e;\n\n  /**\n   * @param {number} x\n   * @param {number} min\n   * @param {number} max\n   */\n  var normalize = function normalize(x, min, max) {\n    var e = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    return min === 0 && max === 1 ? normExp(x, e) : normExp((x - min) / (max - min) || 0, e);\n  };\n\n  /**\n   * @param {any} x\n   * @param {number} min\n   * @param {number} max\n   */\n  var denormalize = function denormalize(x, min, max) {\n    var e = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    return min === 0 && max === 1 ? denormExp(x, e) : denormExp(x, e) * (max - min) + min;\n  };\n\n  /**\n   * @param {number} x\n   * @param {number} min\n   * @param {number} max\n   */\n  var inRange = (x, min, max) => x >= min && x <= max;\n\n  /**\n   * @implements {IWamParameterInfo}\n   */\n  class WamParameterInfo {\n    /**\n     * @param {string} id\n     * @param {WamParameterConfiguration} [config]\n     */\n    constructor(id) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var {\n        type,\n        label,\n        defaultValue,\n        minValue,\n        maxValue,\n        discreteStep,\n        exponent,\n        choices,\n        units\n      } = config;\n      if (type === undefined) type = 'float';\n      if (label === undefined) label = '';\n      if (defaultValue === undefined) defaultValue = 0;\n      if (choices === undefined) choices = [];\n      if (type === 'boolean' || type === 'choice') {\n        discreteStep = 1;\n        minValue = 0;\n        if (choices.length) maxValue = choices.length - 1;else maxValue = 1;\n      } else {\n        if (minValue === undefined) minValue = 0;\n        if (maxValue === undefined) maxValue = 1;\n        if (discreteStep === undefined) discreteStep = 0;\n        if (exponent === undefined) exponent = 0;\n        if (units === undefined) units = '';\n      }\n      var errBase = \"Param config error | \".concat(id, \": \");\n      if (minValue >= maxValue) throw Error(errBase.concat('minValue must be less than maxValue'));\n      if (!inRange(defaultValue, minValue, maxValue)) throw Error(errBase.concat('defaultValue out of range'));\n      if (discreteStep % 1 || discreteStep < 0) {\n        throw Error(errBase.concat('discreteStep must be a non-negative integer'));\n      } else if (discreteStep > 0 && (minValue % 1 || maxValue % 1 || defaultValue % 1)) {\n        throw Error(errBase.concat('non-zero discreteStep requires integer minValue, maxValue, and defaultValue'));\n      }\n      if (type === 'choice' && !choices.length) {\n        throw Error(errBase.concat('choice type parameter requires list of strings in choices'));\n      }\n\n      /**\n       * The parameter's unique identifier.\n       * @readonly @type {string}\n       */\n      this.id = id;\n\n      /**\n       * The parameter's human-readable name.\n       * @readonly @type {string}\n       */\n      this.label = label;\n\n      /**\n       * The parameter's data type.\n       * @readonly @type {WamParameterType}\n       */\n      this.type = type;\n\n      /**\n       * The parameter's default value. Must be\n       * within range `[minValue, maxValue]`.\n       * @readonly @type {number}\n       */\n      this.defaultValue = defaultValue;\n\n      /**\n       * The minimum valid value of the parameter's range.\n       * @readonly @type {number}\n       */\n      this.minValue = minValue;\n\n      /**\n       * The maximum valid value of the parameter's range.\n       * @readonly @type {number}\n       */\n      this.maxValue = maxValue;\n\n      /**\n       * The distance between adjacent valid integer\n       * values, if applicable.\n       * @readonly @type {number}\n       */\n      this.discreteStep = discreteStep;\n\n      /**\n       * The nonlinear (exponential) skew of the parameter's\n       * range, if applicable.\n       *  @readonly @type {number}\n       */\n      this.exponent = exponent;\n\n      /**\n       * A list of human-readable choices corresponding to each\n       * valid integer value in the parameter's range, if applicable.\n       * @readonly @type {string[]}\n       */\n      this.choices = choices;\n\n      /**\n       * A human-readable string representing the units of the\n       * parameter's range, if applicable.\n       * @readonly @type {string}\n       */\n      this.units = units;\n    }\n\n    /**\n     * Convert a value from the parameter's denormalized range\n     * `[minValue, maxValue]` to normalized range `[0, 1]`.\n     * @param {number} value\n     */\n    normalize(value) {\n      return normalize(value, this.minValue, this.maxValue, this.exponent);\n    }\n\n    /**\n     * Convert a value from normalized range `[0, 1]` to the\n     * parameter's denormalized range `[minValue, maxValue]`.\n     * @param {number} valueNorm\n     */\n    denormalize(valueNorm) {\n      return denormalize(valueNorm, this.minValue, this.maxValue, this.exponent);\n    }\n\n    /**\n     * Get a human-readable string representing the given value,\n     * including units if applicable.\n     * @param {number} value\n     */\n    valueString(value) {\n      if (this.choices) return this.choices[value];\n      if (this.units !== '') return \"\".concat(value, \" \").concat(this.units);\n      return \"\".concat(value);\n    }\n  }\n  if (audioWorkletGlobalScope.AudioWorkletProcessor) {\n    /** @type {WamSDKBaseModuleScope} */\n    var ModuleScope = audioWorkletGlobalScope.webAudioModules.getModuleScope(moduleId);\n    if (!ModuleScope.WamParameterInfo) ModuleScope.WamParameterInfo = WamParameterInfo;\n  }\n  return WamParameterInfo;\n};\n\nvar WamParameterInfo = getWamParameterInfo();\nclass ParamMappingConfigurator {\n  /**\n   * @param {ParametersMappingConfiguratorOptions} [options = {}]\n   */\n  constructor() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"_paramsConfig\", undefined);\n    _defineProperty(this, \"_internalParamsConfig\", undefined);\n    _defineProperty(this, \"_paramsMapping\", {});\n    var {\n      paramsConfig,\n      paramsMapping,\n      internalParamsConfig\n    } = options;\n    this._paramsConfig = paramsConfig;\n    this._paramsMapping = paramsMapping;\n    this._internalParamsConfig = internalParamsConfig;\n  }\n\n  /**\n   * @private\n   * @type {Record<string, WamParameterConfiguration>}\n   */\n\n  /**\n   * Auto-completed `paramsConfig`:\n   *\n   * if no `paramsConfig` is defined while initializing, this will be be filled from the internalParamsConfig;\n   *\n   * if a parameter is not fully configured, the incompleted properties will have the same value as in the internalParamsConfig.\n   *\n   * @type {WamParameterInfoMap}\n   */\n  get paramsConfig() {\n    var {\n      internalParamsConfig\n    } = this;\n    return Object.entries(this._paramsConfig || internalParamsConfig).reduce((configs, _ref) => {\n      var _config$label, _config$defaultValue, _config$minValue, _config$maxValue;\n      var [id, config] = _ref;\n      var internalParam = internalParamsConfig[id];\n      configs[id] = new WamParameterInfo(id, _objectSpread2(_objectSpread2({}, config), {}, {\n        label: (_config$label = config.label) !== null && _config$label !== void 0 ? _config$label : id,\n        defaultValue: (_config$defaultValue = config.defaultValue) !== null && _config$defaultValue !== void 0 ? _config$defaultValue : internalParam === null || internalParam === void 0 ? void 0 : internalParam.defaultValue,\n        minValue: (_config$minValue = config.minValue) !== null && _config$minValue !== void 0 ? _config$minValue : internalParam === null || internalParam === void 0 ? void 0 : internalParam.minValue,\n        maxValue: (_config$maxValue = config.maxValue) !== null && _config$maxValue !== void 0 ? _config$maxValue : internalParam === null || internalParam === void 0 ? void 0 : internalParam.maxValue\n      }));\n      return configs;\n    }, {});\n  }\n\n  /**\n   * @private\n   * @type {InternalParametersDescriptor}\n   */\n\n  /**\n   * Auto-completed configuration of the `internalParamsConfig`\n   *\n   * Internal Parameters Config contains all the automatable parameters' information.\n   *\n   * An automatable parameter could be a `WebAudio` `AudioParam`\n   * or a config with an `onChange` callback that will be called while the value has been changed.\n   *\n   * @type {InternalParametersDescriptor}\n   */\n  get internalParamsConfig() {\n    return Object.entries(this._internalParamsConfig || {}).reduce((configs, _ref2) => {\n      var [name, config] = _ref2;\n      if (config instanceof AudioParam) configs[name] = config;else {\n        var defaultConfig = {\n          minValue: 0,\n          maxValue: 1,\n          defaultValue: 0,\n          automationRate: 30\n        };\n        configs[name] = _objectSpread2(_objectSpread2({}, defaultConfig), config);\n      }\n      return configs;\n    }, {});\n  }\n\n  /**\n   * @private\n   * @type {ParametersMapping}\n   */\n\n  /**\n   * Auto-completed `paramsMapping`,\n   * the mapping can be omitted while initialized,\n   * but is useful when an exposed param (in the `paramsConfig`) should automate\n   * several internal params (in the `internalParamsConfig`) or has a different range there.\n   *\n   * If a parameter is present in both `paramsConfig` and `internalParamsConfig` (or the `paramsConfig` is not configured),\n   * a map of this parameter will be there automatically, if not declared explicitly.\n   *\n   * @type {ParametersMapping}\n   */\n  get paramsMapping() {\n    var declared = this._paramsMapping || {};\n    var externalParams = this.paramsConfig;\n    var internalParams = this.internalParamsConfig;\n    return Object.entries(externalParams).reduce((mapping, _ref3) => {\n      var [name, {\n        minValue,\n        maxValue\n      }] = _ref3;\n      var sourceRange = [minValue, maxValue];\n      var defaultMapping = {\n        sourceRange,\n        targetRange: [...sourceRange]\n      };\n      if (declared[name]) {\n        var declaredTargets = Object.entries(declared[name]).reduce((targets, _ref4) => {\n          var [targetName, targetMapping] = _ref4;\n          if (internalParams[targetName]) {\n            targets[targetName] = _objectSpread2(_objectSpread2({}, defaultMapping), targetMapping);\n          }\n          return targets;\n        }, {});\n        mapping[name] = declaredTargets;\n      } else if (internalParams[name]) {\n        mapping[name] = {\n          [name]: _objectSpread2({}, defaultMapping)\n        };\n      }\n      return mapping;\n    }, {});\n  }\n}\n\n/** @typedef {import('@webaudiomodules/api').WamParameter} WamParameter */\n/** @typedef {import('@webaudiomodules/api').WamParameterInfo} WamParameterInfo */\n\n/**\n * @extends {AudioParam}\n * @implements {WamParameter}\n */\nclass MgrAudioParam extends AudioParam {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"_info\", undefined);\n  }\n  get exponent() {\n    return this.info.exponent;\n  }\n\n  /**\n   * @type {WamParameterInfo}\n   */\n\n  get info() {\n    return this._info;\n  }\n  set info(info) {\n    this._info = info;\n  }\n  set normalizedValue(valueIn) {\n    this.value = this.info.denormalize(valueIn);\n  }\n  get normalizedValue() {\n    return this.info.normalize(this.value);\n  }\n  setValueAtTime(value, startTime) {\n    return super.setValueAtTime(value, startTime);\n  }\n  setNormalizedValueAtTime(valueIn, startTime) {\n    var value = this.info.denormalize(valueIn);\n    return this.setValueAtTime(value, startTime);\n  }\n  linearRampToValueAtTime(value, endTime) {\n    return super.linearRampToValueAtTime(value, endTime);\n  }\n  linearRampToNormalizedValueAtTime(valueIn, endTime) {\n    var value = this.info.denormalize(valueIn);\n    return this.linearRampToValueAtTime(value, endTime);\n  }\n  exponentialRampToValueAtTime(value, endTime) {\n    return super.exponentialRampToValueAtTime(value, endTime);\n  }\n  exponentialRampToNormalizedValueAtTime(valueIn, endTime) {\n    var value = this.info.denormalize(valueIn);\n    return this.exponentialRampToValueAtTime(value, endTime);\n  }\n  setTargetAtTime(target, startTime, timeConstant) {\n    return super.setTargetAtTime(target, startTime, timeConstant);\n  }\n  setNormalizedTargetAtTime(targetIn, startTime, timeConstant) {\n    var target = this.info.denormalize(targetIn);\n    return this.setTargetAtTime(target, startTime, timeConstant);\n  }\n  setValueCurveAtTime(values, startTime, duration) {\n    return super.setValueCurveAtTime(values, startTime, duration);\n  }\n  setNormalizedValueCurveAtTime(valuesIn, startTime, duration) {\n    var values = Array.from(valuesIn).map(v => this.info.denormalize(v));\n    return this.setValueCurveAtTime(values, startTime, duration);\n  }\n  cancelScheduledParamValues(cancelTime) {\n    return super.cancelScheduledValues(cancelTime);\n  }\n  cancelAndHoldParamAtTime(cancelTime) {\n    return super.cancelAndHoldAtTime(cancelTime);\n  }\n}\n\n/** @typedef {import('@webaudiomodules/api').WebAudioModule} WebAudioModule */\n/** @typedef {import('@webaudiomodules/api').WamNode} WamNode */\n/** @typedef {import('@webaudiomodules/api').WamParameterDataMap} WamParameterValueMap */\n/** @typedef {import('@webaudiomodules/api').WamEvent} WamEvent */\n/** @typedef {import('@webaudiomodules/api').WamAutomationEvent} WamAutomationEvent */\n/** @typedef {import('./types').ParamMgrOptions} ParamMgrOptions */\n/** @typedef {import('./types').ParamMgrCallFromProcessor} ParamMgrCallFromProcessor */\n/** @typedef {import('./types').ParamMgrCallToProcessor} ParamMgrCallToProcessor */\n/** @typedef {import('./types').ParamMgrNodeMsgIn} ParamMgrNodeMsgIn */\n/** @typedef {import('./types').ParamMgrNodeMsgOut} ParamMgrNodeMsgOut */\n/** @typedef {import('./types').ParamMgrNode} IParamMgrNode */\n\n/** @type {typeof import('./TypedAudioWorklet').TypedAudioWorkletNode} */\n// @ts-ignore\nvar AudioWorkletNode = globalThis.AudioWorkletNode;\n\n/**\n * @extends {AudioWorkletNode<ParamMgrNodeMsgIn, ParamMgrNodeMsgOut>}\n * @implements {IParamMgrNode}\n */\nclass ParamMgrNode extends AudioWorkletNode {\n  /**\n      * @param {WebAudioModule} module\n      * @param {ParamMgrOptions} options\n      */\n  constructor(module, options) {\n    var _this;\n    super(module.audioContext, module.moduleId, {\n      numberOfInputs: 0,\n      numberOfOutputs: 1 + options.processorOptions.internalParams.length,\n      parameterData: options.parameterData,\n      processorOptions: options.processorOptions\n    });\n    _this = this;\n    _defineProperty(this, \"requestDispatchIParamChange\", name => {\n      var config = this.internalParamsConfig[name];\n      if (!('onChange' in config)) return;\n      var {\n        automationRate,\n        onChange\n      } = config;\n      if (typeof automationRate !== 'number' || !automationRate) return;\n      var interval = 1000 / automationRate;\n      var i = this.internalParams.indexOf(name);\n      if (i === -1) return;\n      if (i >= this.internalParams.length) return;\n      if (typeof this.paramsUpdateCheckFnRef[i] === 'number') {\n        window.clearTimeout(this.paramsUpdateCheckFnRef[i]);\n      }\n      this.paramsUpdateCheckFn[i] = () => {\n        var prev = this.$prevParamsBuffer[i];\n        var cur = this.$paramsBuffer[i];\n        if (cur !== prev) {\n          onChange(cur, prev);\n          this.$prevParamsBuffer[i] = cur;\n        }\n        this.paramsUpdateCheckFnRef[i] = window.setTimeout(this.paramsUpdateCheckFn[i], interval);\n      };\n      this.paramsUpdateCheckFn[i]();\n    });\n    var {\n      processorOptions,\n      internalParamsConfig\n    } = options;\n    this.initialized = false;\n    this.module = module;\n    this.paramsConfig = processorOptions.paramsConfig;\n    this.internalParams = processorOptions.internalParams;\n    this.internalParamsConfig = internalParamsConfig;\n    this.$prevParamsBuffer = new Float32Array(this.internalParams.length);\n    this.paramsUpdateCheckFn = [];\n    this.paramsUpdateCheckFnRef = [];\n    this.messageRequestId = 0;\n    Object.entries(this.getParams()).forEach(_ref => {\n      var [name, param] = _ref;\n      Object.setPrototypeOf(param, MgrAudioParam.prototype);\n      param._info = this.paramsConfig[name];\n    });\n\n    /** @type {Record<number, ((...args: any[]) => any)>} */\n    var resolves = {};\n    /** @type {Record<number, ((...args: any[]) => any)>} */\n    var rejects = {};\n    /**\n     * @param {keyof ParamMgrCallToProcessor} call\n     * @param {any} args\n     */\n    this.call = function (call) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      var id = _this.messageRequestId;\n      _this.messageRequestId += 1;\n      return new Promise((resolve, reject) => {\n        resolves[id] = resolve;\n        rejects[id] = reject;\n        _this.port.postMessage({\n          id,\n          call,\n          args\n        });\n      });\n    };\n    this.handleMessage = _ref2 => {\n      var {\n        data\n      } = _ref2;\n      var {\n        id,\n        call,\n        args,\n        value,\n        error\n      } = data;\n      if (call) {\n        /** @type {any} */\n        var r = {\n          id\n        };\n        try {\n          r.value = this[call](...args);\n        } catch (e) {\n          r.error = e;\n        }\n        this.port.postMessage(r);\n      } else {\n        if (error) {\n          if (rejects[id]) rejects[id](error);\n          delete rejects[id];\n          return;\n        }\n        if (resolves[id]) {\n          resolves[id](value);\n          delete resolves[id];\n        }\n      }\n    };\n    this.port.start();\n    this.port.addEventListener('message', this.handleMessage);\n  }\n\n  /**\n   * @returns {ReadonlyMap<string, MgrAudioParam>}\n   */\n  get parameters() {\n    // @ts-ignore\n    return super.parameters;\n  }\n  get groupId() {\n    return this.module.groupId;\n  }\n  get moduleId() {\n    return this.module.moduleId;\n  }\n  get instanceId() {\n    return this.module.instanceId;\n  }\n  initialize() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      /** @type {ReturnType<ParamMgrCallToProcessor['getBuffer']>} */\n      var response = yield _this2.call('getBuffer');\n      var {\n        lock,\n        paramsBuffer\n      } = response;\n      _this2.$lock = lock;\n      _this2.$paramsBuffer = paramsBuffer;\n      var offset = 1;\n      Object.entries(_this2.internalParamsConfig).forEach((_ref3, i) => {\n        var [name, config] = _ref3;\n        if (_this2.context.state === 'suspended') _this2.$paramsBuffer[i] = config.defaultValue;\n        if (config instanceof AudioParam) {\n          try {\n            config.automationRate = 'a-rate';\n            // eslint-disable-next-line no-empty\n          } catch (_unused) {} finally {\n            config.value = Math.max(0, config.minValue);\n            _this2.connect(config, offset + i);\n          }\n        } else if (config instanceof AudioNode) {\n          _this2.connect(config, offset + i);\n        } else {\n          _this2.requestDispatchIParamChange(name);\n        }\n      });\n      _this2.connect(_this2.module.audioContext.destination, 0, 0);\n      _this2.initialized = true;\n      return _this2;\n    })();\n  }\n\n  /**\n   * @param {ReturnType<ParamMgrCallToProcessor['getBuffer']>} buffer\n   */\n  setBuffer(_ref4) {\n    var {\n      lock,\n      paramsBuffer\n    } = _ref4;\n    this.$lock = lock;\n    this.$paramsBuffer = paramsBuffer;\n  }\n  setParamsMapping(paramsMapping) {\n    return this.call('setParamsMapping', paramsMapping);\n  }\n  getCompensationDelay() {\n    return this.call('getCompensationDelay');\n  }\n  getParameterInfo() {\n    for (var _len2 = arguments.length, parameterIdQuery = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      parameterIdQuery[_key2] = arguments[_key2];\n    }\n    return this.call('getParameterInfo', ...parameterIdQuery);\n  }\n  getParameterValues(normalized) {\n    for (var _len3 = arguments.length, parameterIdQuery = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      parameterIdQuery[_key3 - 1] = arguments[_key3];\n    }\n    return this.call('getParameterValues', normalized, ...parameterIdQuery);\n  }\n\n  /**\n   * @param {WamAutomationEvent} event\n   */\n  scheduleAutomation(event) {\n    var time = event.time || this.context.currentTime;\n    var {\n      id,\n      normalized,\n      value\n    } = event.data;\n    var audioParam = this.getParam(id);\n    if (!audioParam) return;\n    if (audioParam.info.type === 'float') {\n      if (normalized) audioParam.linearRampToNormalizedValueAtTime(value, time);else audioParam.linearRampToValueAtTime(value, time);\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (normalized) audioParam.setNormalizedValueAtTime(value, time);else audioParam.setValueAtTime(value, time);\n    }\n  }\n\n  /**\n   * @param {WamEvent[]} events\n   */\n  scheduleEvents() {\n    for (var _len4 = arguments.length, events = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      events[_key4] = arguments[_key4];\n    }\n    events.forEach(event => {\n      if (event.type === 'wam-automation') {\n        this.scheduleAutomation(event);\n      }\n    });\n    this.call('scheduleEvents', ...events);\n  }\n\n  /**\n   * @param {WamEvent[]} events\n   */\n  emitEvents() {\n    for (var _len5 = arguments.length, events = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      events[_key5] = arguments[_key5];\n    }\n    this.call('emitEvents', ...events);\n  }\n  clearEvents() {\n    this.call('clearEvents');\n  }\n\n  /**\n   * @param {WamEvent} event\n   */\n  dispatchWamEvent(event) {\n    if (event.type === 'wam-automation') {\n      this.scheduleAutomation(event);\n    } else {\n      this.dispatchEvent(new CustomEvent(event.type, {\n        detail: event\n      }));\n    }\n  }\n\n  /**\n   * @param {WamParameterValueMap} parameterValues\n   */\n  setParameterValues(parameterValues) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      Object.keys(parameterValues).forEach(parameterId => {\n        var parameterUpdate = parameterValues[parameterId];\n        var parameter = _this3.parameters.get(parameterId);\n        if (!parameter) return;\n        if (!parameterUpdate.normalized) parameter.value = parameterUpdate.value;else parameter.normalizedValue = parameterUpdate.value;\n      });\n    })();\n  }\n  getState() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.getParamsValues();\n    })();\n  }\n  setState(state) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.setParamsValues(state);\n    })();\n  }\n  convertTimeToFrame(time) {\n    return Math.round(time * this.context.sampleRate);\n  }\n  convertFrameToTime(frame) {\n    return frame / this.context.sampleRate;\n  }\n\n  /**\n   * @param {string} name\n   */\n\n  /**\n   * @param {string} name\n   */\n  getIParamIndex(name) {\n    var i = this.internalParams.indexOf(name);\n    return i === -1 ? null : i;\n  }\n\n  /**\n   * @param {string} name\n   * @param {AudioParam | AudioNode} dest\n   * @param {number} index\n   */\n  connectIParam(name, dest, index) {\n    var offset = 1;\n    var i = this.getIParamIndex(name);\n    if (i !== null) {\n      if (dest instanceof AudioNode) {\n        if (typeof index === 'number') this.connect(dest, offset + i, index);else this.connect(dest, offset + i);\n      } else {\n        this.connect(dest, offset + i);\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {AudioParam | AudioNode} dest\n   * @param {number} index\n   */\n  disconnectIParam(name, dest, index) {\n    var offset = 1;\n    var i = this.getIParamIndex(name);\n    if (i !== null) {\n      if (dest instanceof AudioNode) {\n        if (typeof index === 'number') this.disconnect(dest, offset + i, index);else this.disconnect(dest, offset + i);\n      } else {\n        this.disconnect(dest, offset + i);\n      }\n    }\n  }\n  getIParamValue(name) {\n    var i = this.getIParamIndex(name);\n    return i !== null ? this.$paramsBuffer[i] : null;\n  }\n  getIParamsValues() {\n    /** @type {Record<string, number>} */\n    var values = {};\n    this.internalParams.forEach((name, i) => {\n      values[name] = this.$paramsBuffer[i];\n    });\n    return values;\n  }\n  getParam(name) {\n    return this.parameters.get(name) || null;\n  }\n  getParams() {\n    // @ts-ignore\n    return Object.fromEntries(this.parameters);\n  }\n  getParamValue(name) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.value;\n  }\n  setParamValue(name, value) {\n    var param = this.parameters.get(name);\n    if (!param) return;\n    param.value = value;\n  }\n  getParamsValues() {\n    /** @type {Record<string, number>} */\n    var values = {};\n    this.parameters.forEach((v, k) => {\n      values[k] = v.value;\n    });\n    return values;\n  }\n\n  /**\n   * @param {Record<string, number>} values\n   */\n  setParamsValues(values) {\n    if (!values) return;\n    Object.entries(values).forEach(_ref5 => {\n      var [k, v] = _ref5;\n      this.setParamValue(k, v);\n    });\n  }\n  getNormalizedParamValue(name) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.normalizedValue;\n  }\n  setNormalizedParamValue(name, value) {\n    var param = this.parameters.get(name);\n    if (!param) return;\n    param.normalizedValue = value;\n  }\n  getNormalizedParamsValues() {\n    var values = {};\n    this.parameters.forEach((v, k) => {\n      values[k] = this.getNormalizedParamValue(k);\n    });\n    return values;\n  }\n  setNormalizedParamsValues(values) {\n    if (!values) return;\n    Object.entries(values).forEach(_ref6 => {\n      var [k, v] = _ref6;\n      this.setNormalizedParamValue(k, v);\n    });\n  }\n  setParamValueAtTime(name, value, startTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.setValueAtTime(value, startTime);\n  }\n  setNormalizedParamValueAtTime(name, value, startTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.setNormalizedValueAtTime(value, startTime);\n  }\n  linearRampToParamValueAtTime(name, value, endTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.linearRampToValueAtTime(value, endTime);\n  }\n  linearRampToNormalizedParamValueAtTime(name, value, endTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.linearRampToNormalizedValueAtTime(value, endTime);\n  }\n  exponentialRampToParamValueAtTime(name, value, endTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.exponentialRampToValueAtTime(value, endTime);\n  }\n  exponentialRampToNormalizedParamValueAtTime(name, value, endTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.exponentialRampToNormalizedValueAtTime(value, endTime);\n  }\n  setParamTargetAtTime(name, target, startTime, timeConstant) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.setTargetAtTime(target, startTime, timeConstant);\n  }\n  setNormalizedParamTargetAtTime(name, target, startTime, timeConstant) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.setNormalizedTargetAtTime(target, startTime, timeConstant);\n  }\n  setParamValueCurveAtTime(name, values, startTime, duration) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.setValueCurveAtTime(values, startTime, duration);\n  }\n  setNormalizedParamValueCurveAtTime(name, values, startTime, duration) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.setNormalizedValueCurveAtTime(values, startTime, duration);\n  }\n  cancelScheduledParamValues(name, cancelTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.cancelScheduledValues(cancelTime);\n  }\n  cancelAndHoldParamAtTime(name, cancelTime) {\n    var param = this.parameters.get(name);\n    if (!param) return null;\n    return param.cancelAndHoldAtTime(cancelTime);\n  }\n\n  /**\n   * @param {string} toId\n   * @param {number} [output]\n   */\n  connectEvents(toId, output) {\n    this.call('connectEvents', toId, output);\n  }\n\n  /**\n   * @param {string} [toId]\n   * @param {number} [output]\n   */\n  disconnectEvents(toId, output) {\n    this.call('disconnectEvents', toId, output);\n  }\n  destroy() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      _this6.disconnect();\n      _this6.paramsUpdateCheckFnRef.forEach(ref => {\n        if (typeof ref === 'number') window.clearTimeout(ref);\n      });\n      yield _this6.call('destroy');\n      _this6.port.close();\n    })();\n  }\n}\n\n/** @typedef {import('@webaudiomodules/api').WebAudioModule} WebAudioModule */\n/** @typedef {import('./types').ParametersMappingConfiguratorOptions} ParametersMappingConfiguratorOptions */\n/** @typedef {import('./types').ParamMgrOptions} ParamMgrOptions */\n/** @typedef {import('./types').AudioWorkletRegister} AudioWorkletRegister */\n\nclass ParamMgrFactory {\n  /**\n   * @param {WebAudioModule} module\n   * @param {ParametersMappingConfiguratorOptions} [optionsIn = {}]\n   */\n  static create(module) {\n    var _arguments = arguments;\n    return _asyncToGenerator(function* () {\n      var optionsIn = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n      var {\n        audioContext,\n        groupId,\n        moduleId,\n        instanceId\n      } = module;\n      var {\n        paramsConfig,\n        paramsMapping,\n        internalParamsConfig\n      } = new ParamMappingConfigurator(optionsIn);\n      var initialParamsValue = Object.entries(paramsConfig).reduce((currentParams, _ref) => {\n        var [name, {\n          defaultValue\n        }] = _ref;\n        currentParams[name] = defaultValue;\n        return currentParams;\n      }, {});\n      var serializableParamsConfig = Object.entries(paramsConfig).reduce((currentParams, _ref2) => {\n        var [name, {\n          id,\n          label,\n          type,\n          defaultValue,\n          minValue,\n          maxValue,\n          discreteStep,\n          exponent,\n          choices,\n          units\n        }] = _ref2;\n        currentParams[name] = {\n          id,\n          label,\n          type,\n          defaultValue,\n          minValue,\n          maxValue,\n          discreteStep,\n          exponent,\n          choices,\n          units\n        };\n        return currentParams;\n      }, {});\n      yield addFunctionModule(audioContext.audioWorklet, processor, moduleId, serializableParamsConfig);\n      /** @type {ParamMgrOptions} */\n      var options = {\n        internalParamsConfig,\n        parameterData: initialParamsValue,\n        processorOptions: {\n          paramsConfig,\n          paramsMapping,\n          internalParamsMinValues: Object.values(internalParamsConfig).map(config => Math.max(0, (config === null || config === void 0 ? void 0 : config.minValue) || 0)),\n          internalParams: Object.keys(internalParamsConfig),\n          groupId,\n          instanceId,\n          moduleId\n        }\n      };\n      var node = new ParamMgrNode(module, options);\n      yield node.initialize();\n      return node;\n    })();\n  }\n}\n\nvar cache = new Map();\nvar fetchModule = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (url) {\n    if (cache.has(url)) return cache.get(url);\n    var exported;\n    var toExport = {};\n    window.exports = toExport;\n    window.module = {\n      exports: toExport\n    };\n    var esm = yield import( /* webpackIgnore: true */url);\n    var esmKeys = Object.keys(esm);\n    if (esmKeys.length) exported = esm;else exported = window.module.exports;\n    delete window.exports;\n    delete window.module;\n    cache.set(url, exported);\n    return exported;\n  });\n  return function fetchModule(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/* *\n *\n *  WebAudio-Controls is based on\n *    webaudio-knob by Eiji Kitamura http://google.com/+agektmr\n *    webaudio-slider by RYoya Kawai https://plus.google.com/108242669191458983485/posts\n *    webaudio-switch by Keisuke Ai http://d.hatena.ne.jp/aike/\n *  Integrated and enhanced by g200kg http://www.g200kg.com/\n *\n *\tCopyright 2013 Eiji Kitamura / Ryoya KAWAI / Keisuke Ai / g200kg(Tatsuya Shinyagaito)\n *\n *\t Licensed under the Apache License, Version 2.0 (the \"License\");\n *\t you may not use this file except in compliance with the License.\n *\t You may obtain a copy of the License at\n *\n *\t http://www.apache.org/licenses/LICENSE-2.0\n *\n *\t Unless required by applicable law or agreed to in writing, software\n *\t distributed under the License is distributed on an \"AS IS\" BASIS,\n *\t WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\t See the License for the specific language governing permissions and\n *\t limitations under the License.\n *\n * */\nif (window.customElements) {\n  var styles = document.createElement(\"style\");\n  styles.innerHTML = \"#webaudioctrl-context-menu {\\n  display: none;\\n  position: absolute;\\n  z-index: 10;\\n  padding: 0;\\n  width: 100px;\\n  color:#eee;\\n  background-color: #268;\\n  border: solid 1px #888;\\n  box-shadow: 1px 1px 2px #888;\\n  font-family: sans-serif;\\n  font-size: 11px;\\n  line-height:1.7em;\\n  text-align:center;\\n  cursor:pointer;\\n  color:#fff;\\n  list-style: none;\\n}\\n#webaudioctrl-context-menu.active {\\n  display: block;\\n}\\n.webaudioctrl-context-menu__item {\\n  display: block;\\n  margin: 0;\\n  padding: 0;\\n  color: #000;\\n  background-color:#eee;\\n  text-decoration: none;\\n}\\n.webaudioctrl-context-menu__title{\\n  font-weight:bold;\\n}\\n.webaudioctrl-context-menu__item:last-child {\\n  margin-bottom: 0;\\n}\\n.webaudioctrl-context-menu__item:hover {\\n  background-color: #b8b8b8;\\n}\\n\";\n  document.head.appendChild(styles);\n  var midimenu = document.createElement(\"ul\");\n  midimenu.id = \"webaudioctrl-context-menu\";\n  midimenu.innerHTML = \"<li class=\\\"webaudioctrl-context-menu__title\\\">MIDI Learn</li>\\n<li class=\\\"webaudioctrl-context-menu__item\\\" id=\\\"webaudioctrl-context-menu-learn\\\" onclick=\\\"webAudioControlsMidiManager.contextMenuLearn()\\\">Learn</li>\\n<li class=\\\"webaudioctrl-context-menu__item\\\" onclick=\\\"webAudioControlsMidiManager.contextMenuClear()\\\">Clear</li>\\n<li class=\\\"webaudioctrl-context-menu__item\\\" onclick=\\\"webAudioControlsMidiManager.contextMenuClose()\\\">Close</li>\\n\";\n  var opt = {\n    useMidi: 0,\n    midilearn: 0,\n    mididump: 0,\n    outline: 0,\n    knobSrc: null,\n    knobSprites: 0,\n    knobWidth: 0,\n    knobHeight: 0,\n    knobDiameter: 64,\n    knobColors: \"#fff;#000;#000\",\n    sliderSrc: null,\n    sliderKnobsrc: null,\n    sliderWidth: 0,\n    sliderHeight: 0,\n    sliderKnobwidth: 0,\n    sliderKnobheight: 0,\n    sliderDitchlength: 0,\n    sliderColors: \"#bbb;#444;#fff\",\n    switchWidth: 0,\n    switchHeight: 0,\n    switchDiameter: 24,\n    switchColors: \"#e00;#000;#fcc\",\n    paramWidth: 32,\n    paramHeight: 16,\n    paramColors: \"#fff;#000\"\n  };\n  if (window.WebAudioControlsOptions) Object.assign(opt, window.WebAudioControlsOptions);\n  class WebAudioControlsWidget extends HTMLElement {\n    constructor() {\n      super();\n      this.addEventListener(\"keydown\", this.keydown);\n      this.addEventListener(\"mousedown\", this.pointerdown, {\n        passive: false\n      });\n      this.addEventListener(\"touchstart\", this.pointerdown, {\n        passive: false\n      });\n      this.addEventListener(\"wheel\", this.wheel, {\n        passive: true\n      });\n      this.addEventListener(\"mouseover\", this.pointerover);\n      this.addEventListener(\"mouseout\", this.pointerout);\n      this.addEventListener(\"contextmenu\", this.contextMenu);\n      this.hover = this.drag = 0;\n      document.body.appendChild(midimenu);\n      this.basestyle = \"\\n.webaudioctrl-tooltip{\\n  display:inline-block;\\n  position:absolute;\\n  margin:0 -1000px;\\n  z-index: 999;\\n  background:#eee;\\n  color:#000;\\n  border:1px solid #666;\\n  border-radius:4px;\\n  padding:5px 10px;\\n  text-align:center;\\n  left:0; top:0;\\n  font-size:11px;\\n  opacity:0;\\n  visibility:hidden;\\n}\\n.webaudioctrl-tooltip:before{\\n  content: \\\"\\\";\\n\\tposition: absolute;\\n\\ttop: 100%;\\n\\tleft: 50%;\\n \\tmargin-left: -8px;\\n\\tborder: 8px solid transparent;\\n\\tborder-top: 8px solid #666;\\n}\\n.webaudioctrl-tooltip:after{\\n  content: \\\"\\\";\\n\\tposition: absolute;\\n\\ttop: 100%;\\n\\tleft: 50%;\\n \\tmargin-left: -6px;\\n\\tborder: 6px solid transparent;\\n\\tborder-top: 6px solid #eee;\\n}\\n\";\n    }\n    sendEvent(ev) {\n      var event;\n      event = document.createEvent(\"HTMLEvents\");\n      event.initEvent(ev, false, true);\n      this.dispatchEvent(event);\n    }\n    getAttr(n, def) {\n      var v = this.getAttribute(n);\n      if (v == \"\" || v == null) return def;\n      switch (typeof def) {\n        case \"number\":\n          if (v == \"true\") return 1;\n          v = +v;\n          if (isNaN(v)) return 0;\n          return v;\n      }\n      return v;\n    }\n    showtip(d) {\n      function numformat(s, x) {\n        var i = s.indexOf(\"%\");\n        var c = [0, 0],\n          type = 0,\n          m = 0,\n          r = \"\",\n          j = i + 1;\n        for (; j < s.length; ++j) {\n          if (\"dfxXs\".indexOf(s[j]) >= 0) {\n            type = s[j];\n            break;\n          }\n          if (s[j] == \".\") m = 1;else c[m] = c[m] * 10 + parseInt(s[j]);\n        }\n        switch (type) {\n          case \"x\":\n            r = (x | 0).toString(16);\n            break;\n          case \"X\":\n            r = (x | 0).toString(16).toUpperCase();\n            break;\n          case \"d\":\n            r = (x | 0).toString();\n            break;\n          case \"f\":\n            r = x.toFixed(c[1]);\n            break;\n          case \"s\":\n            r = x.toString();\n            break;\n        }\n        if (c[0] > 0) r = (\"               \" + r).slice(-c[0]);\n        r = s.replace(/%.*[xXdfs]/, r);\n        return r;\n      }\n      var s = this.tooltip;\n      if (this.drag || this.hover) {\n        if (this.valuetip) {\n          if (s == null) s = \"%.\".concat(this.digits, \"f\");else if (s.indexOf(\"%\") < 0) s += \" : %.\".concat(this.digits, \"f\");\n        }\n        if (s) {\n          this.ttframe.innerHTML = numformat(s, this.convValue);\n          this.ttframe.style.display = \"inline-block\";\n          this.ttframe.style.width = \"auto\";\n          this.ttframe.style.height = \"auto\";\n          this.ttframe.style.transition = \"opacity 0.5s \" + d + \"s,visibility 0.5s \" + d + \"s\";\n          this.ttframe.style.opacity = 0.9;\n          this.ttframe.style.visibility = \"visible\";\n          var rc = this.getBoundingClientRect(),\n            rc2 = this.ttframe.getBoundingClientRect();\n            document.documentElement.getBoundingClientRect();\n          this.ttframe.style.left = (rc.width - rc2.width) * 0.5 + 1000 + \"px\";\n          this.ttframe.style.top = -rc2.height - 8 + \"px\";\n          return;\n        }\n      }\n      this.ttframe.style.transition = \"opacity 0.1s \" + d + \"s,visibility 0.1s \" + d + \"s\";\n      this.ttframe.style.opacity = 0;\n      this.ttframe.style.visibility = \"hidden\";\n    }\n    pointerover(e) {\n      this.hover = 1;\n      this.showtip(0.6);\n    }\n    pointerout(e) {\n      this.hover = 0;\n      this.showtip(0);\n    }\n    contextMenu(e) {\n      if (window.webAudioControlsMidiManager && this.midilearn) {\n        webAudioControlsMidiManager.contextMenuOpen(e, this);\n      }\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    setMidiController(channel, cc) {\n      if (this.listeningToThisMidiController(channel, cc)) return;\n      this.midiController = {\n        'channel': channel,\n        'cc': cc\n      };\n      console.log(\"Added mapping for channel=\" + channel + \" cc=\" + cc + \" tooltip=\" + this.tooltip);\n    }\n    listeningToThisMidiController(channel, cc) {\n      var c = this.midiController;\n      if ((c.channel === channel || c.channel < 0) && c.cc === cc) return true;\n      return false;\n    }\n    processMidiEvent(event) {\n      var channel = event.data[0] & 0xf;\n      var controlNumber = event.data[1];\n      if (this.midiMode == 'learn') {\n        this.setMidiController(channel, controlNumber);\n        webAudioControlsMidiManager.contextMenuClose();\n        this.midiMode = 'normal';\n      }\n      if (this.listeningToThisMidiController(channel, controlNumber)) {\n        if (this.tagName == \"WEBAUDIO-SWITCH\") {\n          switch (this.type) {\n            case \"toggle\":\n              if (event.data[2] >= 64) this.setValue(1 - this.value, true);\n              break;\n            case \"kick\":\n              this.setValue(event.data[2] >= 64 ? 1 : 0);\n              break;\n            case \"radio\":\n              var els = document.querySelectorAll(\"webaudio-switch[type='radio'][group='\" + this.group + \"']\");\n              for (var i = 0; i < els.length; ++i) {\n                if (els[i] == this) els[i].setValue(1);else els[i].setValue(0);\n              }\n              break;\n          }\n        } else {\n          var val = this.min + (this.max - this.min) * event.data[2] / 127;\n          this.setValue(val, true);\n        }\n      }\n    }\n  }\n  try {\n    customElements.define(\"webaudio-knob\", class WebAudioKnob extends WebAudioControlsWidget {\n      constructor() {\n        super();\n      }\n      connectedCallback() {\n        var root;\n        //      if(this.attachShadow)\n        //        root=this.attachShadow({mode: 'open'});\n        //      else\n        root = this;\n        root.innerHTML = \"<style>\\n\".concat(this.basestyle, \"\\nwebaudio-knob{\\n  display:inline-block;\\n  position:relative;\\n  margin:0;\\n  padding:0;\\n  cursor:pointer;\\n  font-family: sans-serif;\\n  font-size: 11px;\\n}\\n.webaudio-knob-body{\\n  display:inline-block;\\n  position:relative;\\n  z-index:1;\\n  margin:0;\\n  padding:0;\\n}\\n</style>\\n<div class='webaudio-knob-body' tabindex='1' touch-action='none'></div><div class='webaudioctrl-tooltip'></div>\\n\");\n        this.elem = root.childNodes[2];\n        this.ttframe = root.childNodes[3];\n        this.enable = this.getAttr(\"enable\", 1);\n        this._src = this.getAttr(\"src\", opt.knobSrc);\n        if (!this.hasOwnProperty(\"src\")) Object.defineProperty(this, \"src\", {\n          get: () => {\n            return this._src;\n          },\n          set: v => {\n            this._src = v;\n            this.setupImage();\n          }\n        });\n        this._value = this.getAttr(\"value\", 0);\n        if (!this.hasOwnProperty(\"value\")) Object.defineProperty(this, \"value\", {\n          get: () => {\n            return this._value;\n          },\n          set: v => {\n            this._value = v;\n            this.redraw();\n          }\n        });\n        this.defvalue = this.getAttr(\"defvalue\", 0);\n        this._min = this.getAttr(\"min\", 0);\n        if (!this.hasOwnProperty(\"min\")) Object.defineProperty(this, \"min\", {\n          get: () => {\n            return this._min;\n          },\n          set: v => {\n            this._min = +v;\n            this.redraw();\n          }\n        });\n        this._max = this.getAttr(\"max\", 100);\n        if (!this.hasOwnProperty(\"max\")) Object.defineProperty(this, \"max\", {\n          get: () => {\n            return this._max;\n          },\n          set: v => {\n            this._max = +v;\n            this.redraw();\n          }\n        });\n        this._step = this.getAttr(\"step\", 1);\n        if (!this.hasOwnProperty(\"step\")) Object.defineProperty(this, \"step\", {\n          get: () => {\n            return this._step;\n          },\n          set: v => {\n            this._step = +v;\n            this.redraw();\n          }\n        });\n        this._sprites = this.getAttr(\"sprites\", opt.knobSprites);\n        if (!this.hasOwnProperty(\"sprites\")) Object.defineProperty(this, \"sprites\", {\n          get: () => {\n            return this._sprites;\n          },\n          set: v => {\n            this._sprites = v;\n            this.setupImage();\n          }\n        });\n        this._width = this.getAttr(\"width\", opt.knobWidth);\n        if (!this.hasOwnProperty(\"width\")) Object.defineProperty(this, \"width\", {\n          get: () => {\n            return this._width;\n          },\n          set: v => {\n            this._width = v;\n            this.setupImage();\n          }\n        });\n        this._height = this.getAttr(\"height\", opt.knobHeight);\n        if (!this.hasOwnProperty(\"height\")) Object.defineProperty(this, \"height\", {\n          get: () => {\n            return this._height;\n          },\n          set: v => {\n            this._height = v;\n            this.setupImage();\n          }\n        });\n        this._diameter = this.getAttr(\"diameter\", opt.knobDiameter);\n        if (!this.hasOwnProperty(\"diameter\")) Object.defineProperty(this, \"diameter\", {\n          get: () => {\n            return this._diameter;\n          },\n          set: v => {\n            this._diameter = v;\n            this.setupImage();\n          }\n        });\n        this._colors = this.getAttr(\"colors\", opt.knobColors);\n        if (!this.hasOwnProperty(\"colors\")) Object.defineProperty(this, \"colors\", {\n          get: () => {\n            return this._colors;\n          },\n          set: v => {\n            this._colors = v;\n            this.setupImage();\n          }\n        });\n        this.outline = this.getAttr(\"outline\", opt.outline);\n        this.sensitivity = this.getAttr(\"sensitivity\", 1);\n        this.valuetip = this.getAttr(\"valuetip\", 1);\n        this.tooltip = this.getAttr(\"tooltip\", null);\n        this.conv = this.getAttr(\"conv\", null);\n        if (this.conv) this.convValue = eval(this.conv)(this._value);else this.convValue = this._value;\n        this.midilearn = this.getAttr(\"midilearn\", opt.midilearn);\n        this.midicc = this.getAttr(\"midicc\", null);\n        this.midiController = {};\n        this.midiMode = \"normal\";\n        if (this.midicc) {\n          var ch = parseInt(this.midicc.substring(0, this.midicc.lastIndexOf(\".\"))) - 1;\n          var cc = parseInt(this.midicc.substring(this.midicc.lastIndexOf(\".\") + 1));\n          this.setMidiController(ch, cc);\n        }\n        this.setupImage();\n        this.digits = 0;\n        this.coltab = [\"#e00\", \"#000\", \"#000\"];\n        if (window.webAudioControlsMidiManager)\n          //        window.webAudioControlsMidiManager.updateWidgets();\n          window.webAudioControlsMidiManager.addWidget(this);\n      }\n      disconnectedCallback() {}\n      setupImage() {\n        this.kw = this.width || this.diameter;\n        this.kh = this.height || this.diameter;\n        if (!this.src) {\n          if (this.colors) this.coltab = this.colors.split(\";\");\n          if (!this.coltab) this.coltab = [\"#e00\", \"#000\", \"#000\"];\n          var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"64\\\" height=\\\"6464\\\" preserveAspectRatio=\\\"none\\\">\\n<radialGradient id=\\\"gr\\\" cx=\\\"30%\\\" cy=\\\"30%\\\"><stop offset=\\\"0%\\\" stop-color=\\\"\".concat(this.coltab[2], \"\\\"/><stop offset=\\\"100%\\\" stop-color=\\\"\").concat(this.coltab[1], \"\\\"/></radialGradient>\\n<defs><circle id=\\\"B\\\" cx=\\\"32\\\" cy=\\\"32\\\" r=\\\"30\\\" fill=\\\"url(#gr)\\\"/></defs>\\n<defs><line id=\\\"K\\\" x1=\\\"32\\\" y1=\\\"28\\\" x2=\\\"32\\\" y2=\\\"7\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"6\\\" stroke=\\\"\").concat(this.coltab[0], \"\\\"/></defs>\");\n          for (var i = 0; i < 101; ++i) {\n            svg += \"<use xlink:href=\\\"#B\\\" y=\\\"\".concat(64 * i, \"\\\"/>\");\n            svg += \"<use xlink:href=\\\"#K\\\" y=\\\"\".concat(64 * i, \"\\\" transform=\\\"rotate(\").concat((-135 + 270 * i / 101).toFixed(2), \",32,\").concat(64 * i + 32, \")\\\"/>\");\n          }\n          svg += \"</svg>\";\n          this.elem.style.backgroundImage = \"url(data:image/svg+xml;base64,\" + btoa(svg) + \")\";\n          //        this.elem.style.backgroundSize = \"100% 10100%\";\n          this.elem.style.backgroundSize = \"\".concat(this.kw, \"px \").concat(this.kh * 101, \"px\");\n        } else {\n          this.elem.style.backgroundImage = \"url(\" + this.src + \")\";\n          if (!this.sprites) this.elem.style.backgroundSize = \"100% 100%\";else {\n            //          this.elem.style.backgroundSize = `100% ${(this.sprites+1)*100}%`;\n            this.elem.style.backgroundSize = \"\".concat(this.kw, \"px \").concat(this.kh * (this.sprites + 1), \"px\");\n          }\n        }\n        this.elem.style.outline = this.outline ? \"\" : \"none\";\n        this.elem.style.width = this.kw + \"px\";\n        this.elem.style.height = this.kh + \"px\";\n        this.redraw();\n      }\n      redraw() {\n        this.digits = 0;\n        if (this.step && this.step < 1) {\n          for (var n = this.step; n < 1; n *= 10) {\n            ++this.digits;\n          }\n        }\n        if (this.value < this.min) {\n          this.value = this.min;\n          return;\n        }\n        if (this.value > this.max) {\n          this.value = this.max;\n          return;\n        }\n        var range = this.max - this.min;\n        var style = this.elem.style;\n        var sp = this.src ? this.sprites : 100;\n        if (sp >= 1) {\n          var offset = sp * (this.value - this.min) / range | 0;\n          style.backgroundPosition = \"0px \" + -offset * this.kh + \"px\";\n          style.transform = 'rotate(0deg)';\n        } else {\n          var deg = 270 * ((this.value - this.min) / range - 0.5);\n          style.backgroundPosition = \"0px 0px\";\n          style.transform = 'rotate(' + deg + 'deg)';\n        }\n      }\n      _setValue(v) {\n        if (this.step) v = Math.round((v - this.min) / this.step) * this.step + this.min;\n        this._value = Math.min(this.max, Math.max(this.min, v));\n        if (this._value != this.oldvalue) {\n          this.oldvalue = this._value;\n          if (this.conv) this.convValue = eval(this.conv)(this._value);else this.convValue = this._value;\n          this.redraw();\n          this.showtip(0);\n          return 1;\n        }\n        return 0;\n      }\n      setValue(v, f) {\n        if (this._setValue(v) && f) this.sendEvent(\"input\"), this.sendEvent(\"change\");\n      }\n      wheel(e) {\n        var delta = (this.max - this.min) * 0.01;\n        delta = e.deltaY > 0 ? -delta : delta;\n        if (!e.shiftKey) delta *= 5;\n        if (Math.abs(delta) < this.step) delta = delta > 0 ? +this.step : -this.step;\n        this.setValue(+this.value + delta, true);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      pointerdown(ev) {\n        if (!this.enable) return;\n        var e = ev;\n        if (ev.touches) {\n          e = ev.changedTouches[0];\n          this.identifier = e.identifier;\n        } else {\n          if (e.buttons != 1 && e.button != 0) return;\n        }\n        this.elem.focus();\n        this.drag = 1;\n        this.showtip(0);\n        var pointermove = ev => {\n          var e = ev;\n          if (ev.touches) {\n            for (var i = 0; i < ev.touches.length; ++i) {\n              if (ev.touches[i].identifier == this.identifier) {\n                e = ev.touches[i];\n                break;\n              }\n            }\n          }\n          if (this.lastShift !== e.shiftKey) {\n            this.lastShift = e.shiftKey;\n            this.startPosX = e.pageX;\n            this.startPosY = e.pageY;\n            this.startVal = this.value;\n          }\n          var offset = (this.startPosY - e.pageY - this.startPosX + e.pageX) * this.sensitivity;\n          this._setValue(this.min + ((this.startVal + (this.max - this.min) * offset / ((e.shiftKey ? 4 : 1) * 128) - this.min) / this.step | 0) * this.step);\n          this.sendEvent(\"input\");\n          if (e.preventDefault) e.preventDefault();\n          if (e.stopPropagation) e.stopPropagation();\n          return false;\n        };\n        var pointerup = ev => {\n          var e = ev;\n          if (ev.touches) {\n            for (var i = 0;;) {\n              if (ev.changedTouches[i].identifier == this.identifier) {\n                break;\n              }\n              if (++i >= ev.changedTouches.length) return;\n            }\n          }\n          this.drag = 0;\n          this.showtip(0);\n          this.startPosX = this.startPosY = null;\n          window.removeEventListener('mousemove', pointermove);\n          window.removeEventListener('touchmove', pointermove, {\n            passive: false\n          });\n          window.removeEventListener('mouseup', pointerup);\n          window.removeEventListener('touchend', pointerup);\n          window.removeEventListener('touchcancel', pointerup);\n          document.body.removeEventListener('touchstart', preventScroll, {\n            passive: false\n          });\n          this.sendEvent(\"change\");\n        };\n        var preventScroll = e => {\n          e.preventDefault();\n        };\n        if (e.ctrlKey || e.metaKey) this.setValue(this.defvalue, true);else {\n          this.startPosX = e.pageX;\n          this.startPosY = e.pageY;\n          this.startVal = this.value;\n          window.addEventListener('mousemove', pointermove);\n          window.addEventListener('touchmove', pointermove, {\n            passive: false\n          });\n        }\n        window.addEventListener('mouseup', pointerup);\n        window.addEventListener('touchend', pointerup);\n        window.addEventListener('touchcancel', pointerup);\n        document.body.addEventListener('touchstart', preventScroll, {\n          passive: false\n        });\n        ev.preventDefault();\n        ev.stopPropagation();\n        return false;\n      }\n    });\n  } catch (error) {\n    //console.log(\"webaudio-knob already defined\");\n  }\n  try {\n    customElements.define(\"webaudio-slider\", class WebAudioSlider extends WebAudioControlsWidget {\n      constructor() {\n        super();\n      }\n      connectedCallback() {\n        var root;\n        //      if(this.attachShadow)\n        //        root=this.attachShadow({mode: 'open'});\n        //      else\n        root = this;\n        root.innerHTML = \"<style>\\n\".concat(this.basestyle, \"\\nwebaudio-slider{\\n  display:inline-block;\\n  position:relative;\\n  margin:0;\\n  padding:0;\\n  font-family: sans-serif;\\n  font-size: 11px;\\n  cursor:pointer;\\n}\\n.webaudio-slider-body{\\n  display:inline-block;\\n  position:relative;\\n  margin:0;\\n  padding:0;\\n}\\n.webaudio-slider-knob{\\n  display:inline-block;\\n  position:absolute;\\n  margin:0;\\n  padding:0;\\n}\\n</style>\\n<div class='webaudio-slider-body' tabindex='1' touch-action='none'><div class='webaudio-slider-knob' touch-action='none'></div></div><div class='webaudioctrl-tooltip'></div>\\n\");\n        this.elem = root.childNodes[2];\n        this.knob = this.elem.childNodes[0];\n        this.ttframe = root.childNodes[3];\n        this.enable = this.getAttr(\"enable\", 1);\n        this._src = this.getAttr(\"src\", opt.sliderSrc);\n        if (!this.hasOwnProperty(\"src\")) Object.defineProperty(this, \"src\", {\n          get: () => {\n            return this._src;\n          },\n          set: v => {\n            this._src = v;\n            this.setupImage();\n          }\n        });\n        this._knobsrc = this.getAttr(\"knobsrc\", opt.sliderKnobsrc);\n        if (!this.hasOwnProperty(\"knobsrc\")) Object.defineProperty(this, \"knobsrc\", {\n          get: () => {\n            return this._knobsrc;\n          },\n          set: v => {\n            this._knobsrc = v;\n            this.setupImage();\n          }\n        });\n        this._value = this.getAttr(\"value\", 0);\n        if (!this.hasOwnProperty(\"value\")) Object.defineProperty(this, \"value\", {\n          get: () => {\n            return this._value;\n          },\n          set: v => {\n            this._value = v;\n            this.redraw();\n          }\n        });\n        this.defvalue = this.getAttr(\"defvalue\", 0);\n        this._min = this.getAttr(\"min\", 0);\n        if (!this.hasOwnProperty(\"min\")) Object.defineProperty(this, \"min\", {\n          get: () => {\n            return this._min;\n          },\n          set: v => {\n            this._min = v;\n            this.redraw();\n          }\n        });\n        this._max = this.getAttr(\"max\", 100);\n        if (!this.hasOwnProperty(\"max\")) Object.defineProperty(this, \"max\", {\n          get: () => {\n            return this._max;\n          },\n          set: v => {\n            this._max = v;\n            this.redraw();\n          }\n        });\n        this._step = this.getAttr(\"step\", 1);\n        if (!this.hasOwnProperty(\"step\")) Object.defineProperty(this, \"step\", {\n          get: () => {\n            return this._step;\n          },\n          set: v => {\n            this._step = v;\n            this.redraw();\n          }\n        });\n        this._sprites = this.getAttr(\"sprites\", 0);\n        if (!this.hasOwnProperty(\"sprites\")) Object.defineProperty(this, \"sprites\", {\n          get: () => {\n            return this._sprites;\n          },\n          set: v => {\n            this._sprites = v;\n            this.setupImage();\n          }\n        });\n        this._direction = this.getAttr(\"direction\", null);\n        if (!this.hasOwnProperty(\"direction\")) Object.defineProperty(this, \"direction\", {\n          get: () => {\n            return this._direction;\n          },\n          set: v => {\n            this._direction = v;\n            this.setupImage();\n          }\n        });\n        this._width = this.getAttr(\"width\", opt.sliderWidth);\n        if (!this.hasOwnProperty(\"width\")) Object.defineProperty(this, \"width\", {\n          get: () => {\n            return this._width;\n          },\n          set: v => {\n            this._width = v;\n            this.setupImage();\n          }\n        });\n        this._height = this.getAttr(\"height\", opt.sliderHeight);\n        if (!this.hasOwnProperty(\"height\")) Object.defineProperty(this, \"height\", {\n          get: () => {\n            return this._height;\n          },\n          set: v => {\n            this._height = v;\n            this.setupImage();\n          }\n        });\n        if (this._direction == \"horz\") {\n          if (this._width == 0) this._width = 128;\n          if (this._height == 0) this._height = 24;\n        } else {\n          if (this._width == 0) this._width = 24;\n          if (this._height == 0) this._height = 128;\n        }\n        this._knobwidth = this.getAttr(\"knobwidth\", opt.sliderKnobwidth);\n        Object.defineProperty(this, \"knobwidth\", {\n          get: () => {\n            return this._knobwidth;\n          },\n          set: v => {\n            this._knobwidth = v;\n            this.setupImage();\n          }\n        });\n        this._knobheight = this.getAttr(\"knbheight\", opt.sliderKnobheight);\n        Object.defineProperty(this, \"knobheight\", {\n          get: () => {\n            return this._knobheight;\n          },\n          set: v => {\n            this._knobheight = v;\n            this.setupImage();\n          }\n        });\n        this._ditchlength = this.getAttr(\"ditchlength\", opt.sliderDitchlength);\n        Object.defineProperty(this, \"ditchlength\", {\n          get: () => {\n            return this._ditchlength;\n          },\n          set: v => {\n            this._ditchlength = v;\n            this.setupImage();\n          }\n        });\n        this._colors = this.getAttr(\"colors\", opt.sliderColors);\n        Object.defineProperty(this, \"colors\", {\n          get: () => {\n            return this._colors;\n          },\n          set: v => {\n            this._colors = v;\n            this.setupImage();\n          }\n        });\n        this.outline = this.getAttr(\"outline\", opt.outline);\n        this.sensitivity = this.getAttr(\"sensitivity\", 1);\n        this.valuetip = this.getAttr(\"valuetip\", 1);\n        this.tooltip = this.getAttr(\"tooltip\", null);\n        this.conv = this.getAttr(\"conv\", null);\n        if (this.conv) this.convValue = eval(this.conv)(this._value);else this.convValue = this._value;\n        this.midilearn = this.getAttr(\"midilearn\", opt.midilearn);\n        this.midicc = this.getAttr(\"midicc\", null);\n        this.midiController = {};\n        this.midiMode = \"normal\";\n        if (this.midicc) {\n          var ch = parseInt(this.midicc.substring(0, this.midicc.lastIndexOf(\".\"))) - 1;\n          var cc = parseInt(this.midicc.substring(this.midicc.lastIndexOf(\".\") + 1));\n          this.setMidiController(ch, cc);\n        }\n        this.setupImage();\n        this.digits = 0;\n        if (window.webAudioControlsMidiManager)\n          //        window.webAudioControlsMidiManager.updateWidgets();\n          window.webAudioControlsMidiManager.addWidget(this);\n        this.elem.onclick = e => {\n          e.stopPropagation();\n        };\n      }\n      disconnectedCallback() {}\n      setupImage() {\n        this.coltab = this.colors.split(\";\");\n        this.dr = this.direction;\n        this.dlen = this.ditchlength;\n        if (!this.width) {\n          if (this.dr == \"horz\") this.width = 128;else this.width = 24;\n        }\n        if (!this.height) {\n          if (this.dr == \"horz\") this.height = 24;else this.height = 128;\n        }\n        if (!this.dr) this.dr = this.width <= this.height ? \"vert\" : \"horz\";\n        if (this.dr == \"vert\") {\n          if (!this.dlen) this.dlen = this.height - this.width;\n        } else {\n          if (!this.dlen) this.dlen = this.width - this.height;\n        }\n        this.knob.style.backgroundSize = \"100% 100%\";\n        this.elem.style.backgroundSize = \"100% 100%\";\n        this.elem.style.width = this.width + \"px\";\n        this.elem.style.height = this.height + \"px\";\n        this.kwidth = this.knobwidth || (this.dr == \"horz\" ? this.height : this.width);\n        this.kheight = this.knobheight || (this.dr == \"horz\" ? this.height : this.width);\n        this.knob.style.width = this.kwidth + \"px\";\n        this.knob.style.height = this.kheight + \"px\";\n        if (!this.src) {\n          var r = Math.min(this.width, this.height) * 0.5;\n          var svgbody = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(this.width, \"\\\" height=\\\"\").concat(this.height, \"\\\" preserveAspectRatio=\\\"none\\\">\\n<rect x=\\\"1\\\" y=\\\"1\\\" rx=\\\"\").concat(r, \"\\\" ry=\\\"\").concat(r, \"\\\" width=\\\"\").concat(this.width - 2, \"\\\" height=\\\"\").concat(this.height - 2, \"\\\" fill=\\\"\").concat(this.coltab[1], \"\\\"/></svg>\");\n          this.elem.style.backgroundImage = \"url(data:image/svg+xml;base64,\" + btoa(svgbody) + \")\";\n        } else {\n          this.elem.style.backgroundImage = \"url(\" + this.src + \")\";\n        }\n        if (!this.knobsrc) {\n          var svgthumb = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(this.kwidth, \"\\\" height=\\\"\").concat(this.kheight, \"\\\" preserveAspectRatio=\\\"none\\\">\\n<radialGradient id=\\\"gr\\\" cx=\\\"30%\\\" cy=\\\"30%\\\"><stop offset=\\\"0%\\\" stop-color=\\\"\").concat(this.coltab[2], \"\\\"/><stop offset=\\\"100%\\\" stop-color=\\\"\").concat(this.coltab[0], \"\\\"/></radialGradient>\\n<rect x=\\\"2\\\" y=\\\"2\\\" width=\\\"\").concat(this.kwidth - 4, \"\\\" height=\\\"\").concat(this.kheight - 4, \"\\\" rx=\\\"\").concat(this.kwidth * 0.5, \"\\\" ry=\\\"\").concat(this.kheight * 0.5, \"\\\" fill=\\\"url(#gr)\\\"/></svg>\");\n          this.knob.style.backgroundImage = \"url(data:image/svg+xml;base64,\" + btoa(svgthumb) + \")\";\n        } else {\n          this.knob.style.backgroundImage = \"url(\" + this.knobsrc + \")\";\n        }\n        this.elem.style.outline = this.outline ? \"\" : \"none\";\n        this.redraw();\n      }\n      redraw() {\n        this.digits = 0;\n        if (this.step && this.step < 1) {\n          for (var n = this.step; n < 1; n *= 10) {\n            ++this.digits;\n          }\n        }\n        if (this.value < this.min) {\n          this.value = this.min;\n          return;\n        }\n        if (this.value > this.max) {\n          this.value = this.max;\n          return;\n        }\n        var range = this.max - this.min;\n        var style = this.knob.style;\n        if (this.dr == \"vert\") {\n          style.left = (this.width - this.kwidth) * 0.5 + \"px\";\n          style.top = (1 - (this.value - this.min) / range) * this.dlen + \"px\";\n          this.sensex = 0;\n          this.sensey = 1;\n        } else {\n          style.top = (this.height - this.kheight) * 0.5 + \"px\";\n          style.left = (this.value - this.min) / range * this.dlen + \"px\";\n          this.sensex = 1;\n          this.sensey = 0;\n        }\n      }\n      _setValue(v) {\n        v = Math.round((v - this.min) / this.step) * this.step + this.min;\n        this._value = Math.min(this.max, Math.max(this.min, v));\n        if (this._value != this.oldvalue) {\n          this.oldvalue = this._value;\n          if (this.conv) this.convValue = eval(this.conv)(this._value);else this.convValue = this._value;\n          this.redraw();\n          this.showtip(0);\n          return 1;\n        }\n        return 0;\n      }\n      setValue(v, f) {\n        if (this._setValue(v) && f) this.sendEvent(\"input\"), this.sendEvent(\"change\");\n      }\n      wheel(e) {\n        var delta = (this.max - this.min) * 0.01;\n        delta = e.deltaY > 0 ? -delta : delta;\n        if (!e.shiftKey) delta *= 5;\n        if (Math.abs(delta) < this.step) delta = delta > 0 ? +this.step : -this.step;\n        this.setValue(+this.value + delta, true);\n        e.preventDefault();\n        e.stopPropagation();\n        this.redraw();\n      }\n      pointerdown(ev) {\n        if (!this.enable) return;\n        var e = ev;\n        if (ev.touches) {\n          e = ev.changedTouches[0];\n          this.identifier = e.identifier;\n        } else {\n          if (e.buttons != 1 && e.button != 0) return;\n        }\n        this.elem.focus();\n        this.drag = 1;\n        this.showtip(0);\n        var pointermove = ev => {\n          var e = ev;\n          if (ev.touches) {\n            for (var i = 0; i < ev.touches.length; ++i) {\n              if (ev.touches[i].identifier == this.identifier) {\n                e = ev.touches[i];\n                break;\n              }\n            }\n          }\n          if (this.lastShift !== e.shiftKey) {\n            this.lastShift = e.shiftKey;\n            this.startPosX = e.pageX;\n            this.startPosY = e.pageY;\n            this.startVal = this.value;\n          }\n          var offset = ((this.startPosY - e.pageY) * this.sensey - (this.startPosX - e.pageX) * this.sensex) * this.sensitivity;\n          this._setValue(this.min + ((this.startVal + (this.max - this.min) * offset / ((e.shiftKey ? 4 : 1) * this.dlen) - this.min) / this.step | 0) * this.step);\n          this.sendEvent(\"input\");\n          if (e.preventDefault) e.preventDefault();\n          if (e.stopPropagation) e.stopPropagation();\n          return false;\n        };\n        var pointerup = ev => {\n          var e = ev;\n          if (ev.touches) {\n            for (var i = 0;;) {\n              if (ev.changedTouches[i].identifier == this.identifier) {\n                break;\n              }\n              if (++i >= ev.changedTouches.length) return;\n            }\n          }\n          this.drag = 0;\n          this.showtip(0);\n          this.startPosX = this.startPosY = null;\n          window.removeEventListener('mousemove', pointermove);\n          window.removeEventListener('touchmove', pointermove, {\n            passive: false\n          });\n          window.removeEventListener('mouseup', pointerup);\n          window.removeEventListener('touchend', pointerup);\n          window.removeEventListener('touchcancel', pointerup);\n          document.body.removeEventListener('touchstart', preventScroll, {\n            passive: false\n          });\n          this.sendEvent(\"change\");\n        };\n        var preventScroll = e => {\n          e.preventDefault();\n        };\n        if (e.touches) e = e.touches[0];\n        if (e.ctrlKey || e.metaKey) this.setValue(this.defvalue, true);else {\n          this.startPosX = e.pageX;\n          this.startPosY = e.pageY;\n          this.startVal = this.value;\n          window.addEventListener('mousemove', pointermove);\n          window.addEventListener('touchmove', pointermove, {\n            passive: false\n          });\n        }\n        window.addEventListener('mouseup', pointerup);\n        window.addEventListener('touchend', pointerup);\n        window.addEventListener('touchcancel', pointerup);\n        document.body.addEventListener('touchstart', preventScroll, {\n          passive: false\n        });\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n    });\n  } catch (error) {\n    //console.log(\"webaudio-slider already defined\");\n  }\n  try {\n    customElements.define(\"webaudio-switch\", class WebAudioSwitch extends WebAudioControlsWidget {\n      constructor() {\n        super();\n      }\n      connectedCallback() {\n        var root;\n        //      if(this.attachShadow)\n        //        root=this.attachShadow({mode: 'open'});\n        //      else\n        root = this;\n        root.innerHTML = \"<style>\\n\".concat(this.basestyle, \"\\nwebaudio-switch{\\n  display:inline-block;\\n  margin:0;\\n  padding:0;\\n  font-family: sans-serif;\\n  font-size: 11px;\\n  cursor:pointer;\\n}\\n.webaudio-switch-body{\\n  display:inline-block;\\n  margin:0;\\n  padding:0;\\n}\\n</style>\\n<div class='webaudio-switch-body' tabindex='1' touch-action='none'><div class='webaudioctrl-tooltip'></div></div>\\n\");\n        this.elem = root.childNodes[2];\n        this.ttframe = this.elem.childNodes[0];\n        this.enable = this.getAttr(\"enable\", 1);\n        this._src = this.getAttr(\"src\", null);\n        if (!this.hasOwnProperty(\"src\")) Object.defineProperty(this, \"src\", {\n          get: () => {\n            return this._src;\n          },\n          set: v => {\n            this._src = v;\n            this.setupImage();\n          }\n        });\n        this._value = this.getAttr(\"value\", 0);\n        if (!this.hasOwnProperty(\"value\")) Object.defineProperty(this, \"value\", {\n          get: () => {\n            return this._value;\n          },\n          set: v => {\n            this._value = v;\n            this.redraw();\n          }\n        });\n        this.defvalue = this.getAttr(\"defvalue\", 0);\n        this.type = this.getAttr(\"type\", \"toggle\");\n        this.group = this.getAttr(\"group\", \"\");\n        this._width = this.getAttr(\"width\", 0);\n        if (!this.hasOwnProperty(\"width\")) Object.defineProperty(this, \"width\", {\n          get: () => {\n            return this._width;\n          },\n          set: v => {\n            this._width = v;\n            this.setupImage();\n          }\n        });\n        this._height = this.getAttr(\"height\", 0);\n        if (!this.hasOwnProperty(\"height\")) Object.defineProperty(this, \"height\", {\n          get: () => {\n            return this._height;\n          },\n          set: v => {\n            this._height = v;\n            this.setupImage();\n          }\n        });\n        this._diameter = this.getAttr(\"diameter\", 0);\n        if (!this.hasOwnProperty(\"diameter\")) Object.defineProperty(this, \"diameter\", {\n          get: () => {\n            return this._diameter;\n          },\n          set: v => {\n            this._diameter = v;\n            this.setupImage();\n          }\n        });\n        this.invert = this.getAttr(\"invert\", 0);\n        this._colors = this.getAttr(\"colors\", opt.switchColors);\n        if (!this.hasOwnProperty(\"colors\")) Object.defineProperty(this, \"colors\", {\n          get: () => {\n            return this._colors;\n          },\n          set: v => {\n            this._colors = v;\n            this.setupImage();\n          }\n        });\n        this.outline = this.getAttr(\"outline\", opt.outline);\n        this.valuetip = 0;\n        this.tooltip = this.getAttr(\"tooltip\", null);\n        this.midilearn = this.getAttr(\"midilearn\", opt.midilearn);\n        this.midicc = this.getAttr(\"midicc\", null);\n        this.midiController = {};\n        this.midiMode = \"normal\";\n        if (this.midicc) {\n          var ch = parseInt(this.midicc.substring(0, this.midicc.lastIndexOf(\".\"))) - 1;\n          var cc = parseInt(this.midicc.substring(this.midicc.lastIndexOf(\".\") + 1));\n          this.setMidiController(ch, cc);\n        }\n        this.setupImage();\n        this.digits = 0;\n        if (window.webAudioControlsMidiManager)\n          //        window.webAudioControlsMidiManager.updateWidgets();\n          window.webAudioControlsMidiManager.addWidget(this);\n        this.elem.onclick = e => {\n          e.stopPropagation();\n        };\n      }\n      disconnectedCallback() {}\n      setupImage() {\n        var w = this.width || this.diameter || opt.switchWidth || opt.switchDiameter;\n        var h = this.height || this.diameter || opt.switchHeight || opt.switchDiameter;\n        if (!this.src) {\n          this.coltab = this.colors.split(\";\");\n          var mm = Math.min(w, h);\n          var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(w, \"\\\" height=\\\"\").concat(h * 2, \"\\\" preserveAspectRatio=\\\"none\\\">\\n<radialGradient id=\\\"gr\\\" cx=\\\"30%\\\" cy=\\\"30%\\\"><stop offset=\\\"0%\\\" stop-color=\\\"\").concat(this.coltab[2], \"\\\"/><stop offset=\\\"100%\\\" stop-color=\\\"\").concat(this.coltab[0], \"\\\"/></radialGradient>\\n<rect x=\\\"\").concat(w * 0.05, \"\\\" y=\\\"\").concat(h * 0.05, \"\\\" width=\\\"\").concat(w * 0.9, \"\\\" height=\\\"\").concat(h * 0.9, \"\\\" rx=\\\"\").concat(mm * 0.1, \"\\\" ry=\\\"\").concat(mm * 0.1, \"\\\" fill=\\\"\").concat(this.coltab[1], \"\\\"/>\\n<rect x=\\\"\").concat(w * 0.05, \"\\\" y=\\\"\").concat(h * 1.05, \"\\\" width=\\\"\").concat(w * 0.9, \"\\\" height=\\\"\").concat(h * 0.9, \"\\\" rx=\\\"\").concat(mm * 0.1, \"\\\" ry=\\\"\").concat(mm * 0.1, \"\\\" fill=\\\"\").concat(this.coltab[1], \"\\\"/>\\n<circle cx=\\\"\").concat(w * 0.5, \"\\\" cy=\\\"\").concat(h * 0.5, \"\\\" r=\\\"\").concat(mm * 0.3, \"\\\" stroke=\\\"\").concat(this.coltab[0], \"\\\" stroke-width=\\\"2\\\"/>\\n<circle cx=\\\"\").concat(w * 0.5, \"\\\" cy=\\\"\").concat(h * 1.5, \"\\\" r=\\\"\").concat(mm * 0.3, \"\\\" stroke=\\\"\").concat(this.coltab[0], \"\\\" stroke-width=\\\"2\\\" fill=\\\"url(#gr)\\\"/></svg>\");\n          this.elem.style.backgroundImage = \"url(data:image/svg+xml;base64,\" + btoa(svg) + \")\";\n          this.elem.style.backgroundSize = \"100% 200%\";\n        } else {\n          this.elem.style.backgroundImage = \"url(\" + this.src + \")\";\n          if (!this.sprites) this.elem.style.backgroundSize = \"100% 200%\";else this.elem.style.backgroundSize = \"100% \".concat((this.sprites + 1) * 100, \"%\");\n        }\n        this.elem.style.width = w + \"px\";\n        this.elem.style.height = h + \"px\";\n        this.elem.style.outline = this.outline ? \"\" : \"none\";\n        this.redraw();\n      }\n      redraw() {\n        var style = this.elem.style;\n        if (this.value ^ this.invert) style.backgroundPosition = \"0px -100%\";else style.backgroundPosition = \"0px 0px\";\n      }\n      setValue(v, f) {\n        console.log(v, f);\n        this.value = v;\n        this.checked = !!v;\n        if (this.value != this.oldvalue) {\n          this.redraw();\n          this.showtip(0);\n          if (f) {\n            this.sendEvent(\"input\");\n            this.sendEvent(\"change\");\n          }\n          this.oldvalue = this.value;\n        }\n      }\n      pointerdown(ev) {\n        if (!this.enable) return;\n        var e = ev;\n        if (ev.touches) {\n          e = ev.changedTouches[0];\n          this.identifier = e.identifier;\n        } else {\n          if (e.buttons != 1 && e.button != 0) return;\n        }\n        this.elem.focus();\n        this.drag = 1;\n        this.showtip(0);\n        var pointermove = e => {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        };\n        var pointerup = e => {\n          this.drag = 0;\n          this.showtip(0);\n          window.removeEventListener('mousemove', pointermove);\n          window.removeEventListener('touchmove', pointermove, {\n            passive: false\n          });\n          window.removeEventListener('mouseup', pointerup);\n          window.removeEventListener('touchend', pointerup);\n          window.removeEventListener('touchcancel', pointerup);\n          document.body.removeEventListener('touchstart', preventScroll, {\n            passive: false\n          });\n          if (this.type == \"kick\") {\n            this.value = 0;\n            this.checked = false;\n            this.redraw();\n            this.sendEvent(\"change\");\n          }\n          this.sendEvent(\"click\");\n          e.preventDefault();\n          e.stopPropagation();\n        };\n        var preventScroll = e => {\n          e.preventDefault();\n        };\n        switch (this.type) {\n          case \"kick\":\n            this.setValue(1);\n            this.sendEvent(\"change\");\n            break;\n          case \"toggle\":\n            if (e.ctrlKey || e.metaKey) this.value = defvalue;else this.value = 1 - this.value;\n            this.checked = !!this.value;\n            this.sendEvent(\"change\");\n            break;\n          case \"radio\":\n            var els = document.querySelectorAll(\"webaudio-switch[type='radio'][group='\" + this.group + \"']\");\n            for (var i = 0; i < els.length; ++i) {\n              if (els[i] == this) els[i].setValue(1);else els[i].setValue(0);\n            }\n            this.sendEvent(\"change\");\n            break;\n        }\n        window.addEventListener('mouseup', pointerup);\n        window.addEventListener('touchend', pointerup);\n        window.addEventListener('touchcancel', pointerup);\n        document.body.addEventListener('touchstart', preventScroll, {\n          passive: false\n        });\n        this.redraw();\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n    });\n  } catch (error) {\n    //console.log(\"webaudio-switch already defined\");\n  }\n  try {\n    customElements.define(\"webaudio-param\", class WebAudioParam extends WebAudioControlsWidget {\n      constructor() {\n        super();\n        this.addEventListener(\"keydown\", this.keydown);\n        this.addEventListener(\"mousedown\", this.pointerdown, {\n          passive: false\n        });\n        this.addEventListener(\"touchstart\", this.pointerdown, {\n          passive: false\n        });\n        this.addEventListener(\"wheel\", this.wheel);\n        this.addEventListener(\"mouseover\", this.pointerover);\n        this.addEventListener(\"mouseout\", this.pointerout);\n        this.addEventListener(\"contextmenu\", this.contextMenu);\n      }\n      connectedCallback() {\n        var root;\n        //      if(this.attachShadow)\n        //        root=this.attachShadow({mode: 'open'});\n        //      else\n        root = this;\n        root.innerHTML = \"<style>\\n\".concat(this.basestyle, \"\\nwebaudio-param{\\n  display:inline-block;\\n  user-select:none;\\n  margin:0;\\n  padding:0;\\n  font-family: sans-serif;\\n  font-size: 8px;\\n  cursor:pointer;\\n}\\n.webaudio-param-body{\\n  display:inline-block;\\n  text-align:center;\\n  vertical-align:middle;\\n  position:relative;\\n  border:1px solid #888;\\n  background:none;\\n  border-radius:4px;\\n  margin:0;\\n  padding:0;\\n  font-family:sans-serif;\\n  font-size:11px;\\n}\\n</style>\\n<input class='webaudio-param-body' value='0' tabindex='1' touch-action='none'/><div class='webaudioctrl-tooltip'></div>\\n\");\n        this.elem = root.childNodes[2];\n        this.ttframe = root.childNodes[3];\n        this.enable = this.getAttr(\"enable\", 1);\n        this._value = this.getAttr(\"value\", 0);\n        if (!this.hasOwnProperty(\"value\")) Object.defineProperty(this, \"value\", {\n          get: () => {\n            return this._value;\n          },\n          set: v => {\n            this._value = v;\n            this.redraw();\n          }\n        });\n        this.defvalue = this.getAttr(\"defvalue\", 0);\n        this._fontsize = this.getAttr(\"fontsize\", 9);\n        if (!this.hasOwnProperty(\"fontsize\")) Object.defineProperty(this, \"fontsize\", {\n          get: () => {\n            return this._fontsize;\n          },\n          set: v => {\n            this._fontsize = v;\n            this.setupImage();\n          }\n        });\n        this._src = this.getAttr(\"src\", null);\n        if (!this.hasOwnProperty(\"src\")) Object.defineProperty(this, \"src\", {\n          get: () => {\n            return this._src;\n          },\n          set: v => {\n            this._src = v;\n            this.setupImage();\n          }\n        });\n        this.link = this.getAttr(\"link\", \"\");\n        this._width = this.getAttr(\"width\", 32);\n        if (!this.hasOwnProperty(\"width\")) Object.defineProperty(this, \"width\", {\n          get: () => {\n            return this._width;\n          },\n          set: v => {\n            this._width = v;\n            this.setupImage();\n          }\n        });\n        this._height = this.getAttr(\"height\", 16);\n        if (!this.hasOwnProperty(\"height\")) Object.defineProperty(this, \"height\", {\n          get: () => {\n            return this._height;\n          },\n          set: v => {\n            this._height = v;\n            this.setupImage();\n          }\n        });\n        this._colors = this.getAttr(\"colors\", \"#fff;#000\");\n        if (!this.hasOwnProperty(\"colors\")) Object.defineProperty(this, \"colors\", {\n          get: () => {\n            return this._colors;\n          },\n          set: v => {\n            this._colors = v;\n            this.setupImage();\n          }\n        });\n        this.outline = this.getAttr(\"outline\", opt.outline);\n        this.midiController = {};\n        this.midiMode = \"normal\";\n        if (this.midicc) {\n          var ch = parseInt(this.midicc.substring(0, this.midicc.lastIndexOf(\".\"))) - 1;\n          var cc = parseInt(this.midicc.substring(this.midicc.lastIndexOf(\".\") + 1));\n          this.setMidiController(ch, cc);\n        }\n        this.setupImage();\n        if (window.webAudioControlsMidiManager)\n          //        window.webAudioControlsMidiManager.updateWidgets();\n          window.webAudioControlsMidiManager.addWidget(this);\n        this.fromLink = (e => {\n          this.setValue(e.target.convValue.toFixed(e.target.digits));\n        }).bind(this);\n        this.elem.onchange = () => {\n          var le = document.getElementById(this.link);\n          if (le) le.setValue(+this.elem.value);\n        };\n      }\n      disconnectedCallback() {}\n      setupImage() {\n        this.coltab = this.colors.split(\";\");\n        this.elem.style.color = this.coltab[0];\n        if (!this.src) {\n          this.elem.style.backgroundColor = this.coltab[1];\n        } else {\n          this.elem.style.backgroundImage = \"url(\" + this.src + \")\";\n          this.elem.style.backgroundSize = \"100% 100%\";\n        }\n        this.elem.style.width = this.width + \"px\";\n        this.elem.style.height = this.height + \"px\";\n        this.elem.style.fontSize = this.fontsize + \"px\";\n        this.elem.style.outline = this.outline ? \"\" : \"none\";\n        var l = document.getElementById(this.link);\n        if (l) {\n          this.setValue(l.value.toFixed(l.digits));\n          l.addEventListener(\"input\", e => {\n            this.setValue(l.value.toFixed(l.digits));\n          });\n        }\n        this.redraw();\n      }\n      redraw() {\n        this.elem.value = this.value;\n      }\n      setValue(v, f) {\n        this.value = v;\n        if (this.value != this.oldvalue) {\n          this.redraw();\n          this.showtip(0);\n          if (f) {\n            var event = document.createEvent(\"HTMLEvents\");\n            event.initEvent(\"change\", false, true);\n            this.dispatchEvent(event);\n          }\n          this.oldvalue = this.value;\n        }\n      }\n      pointerdown(ev) {\n        if (!this.enable) return;\n        var e = ev;\n        if (ev.touches) e = ev.touches[0];else {\n          if (e.buttons != 1 && e.button != 0) return;\n        }\n        this.elem.focus();\n        this.drag = 1;\n        this.showtip(0);\n        var pointermove = e => {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        };\n        var pointerup = e => {\n          this.drag = 0;\n          this.showtip(0);\n          window.removeEventListener('mouseup', pointerup);\n          window.removeEventListener('touchend', pointerup);\n          window.removeEventListener('touchcancel', pointerup);\n          document.body.removeEventListener('touchstart', preventScroll, {\n            passive: false\n          });\n        };\n        var preventScroll = e => {\n          e.preventDefault();\n        };\n        window.addEventListener('mouseup', pointerup);\n        window.addEventListener('touchend', pointerup);\n        window.addEventListener('touchcancel', pointerup);\n        document.body.addEventListener('touchstart', preventScroll, {\n          passive: false\n        });\n        this.redraw();\n        if (e.preventDefault) e.preventDefault();\n        if (e.stopPropagation) e.stopPropagation();\n        return false;\n      }\n    });\n  } catch (error) {\n    //console.log(\"webaudio-param already defined\");\n  }\n  try {\n    customElements.define(\"webaudio-keyboard\", class WebAudioKeyboard extends WebAudioControlsWidget {\n      constructor() {\n        super();\n      }\n      connectedCallback() {\n        var root;\n        //      if(this.attachShadow)\n        //        root=this.attachShadow({mode: 'open'});\n        //      else\n        root = this;\n        root.innerHTML = \"<style>\\n\".concat(this.basestyle, \"\\nwebaudio-keyboard{\\n  display:inline-block;\\n  position:relative;\\n  margin:0;\\n  padding:0;\\n  font-family: sans-serif;\\n  font-size: 11px;\\n}\\n.webaudio-keyboard-body{\\n  display:inline-block;\\n  margin:0;\\n  padding:0;\\n}\\n</style>\\n<canvas class='webaudio-keyboard-body' tabindex='1' touch-action='none'></canvas><div class='webauioctrl-tooltip'></div>\\n\");\n        this.cv = root.childNodes[2];\n        this.ttframe = root.childNodes[3];\n        this.ctx = this.cv.getContext(\"2d\");\n        this._values = [];\n        this.enable = this.getAttr(\"enable\", 1);\n        this._width = this.getAttr(\"width\", 480);\n        if (!this.hasOwnProperty(\"width\")) Object.defineProperty(this, \"width\", {\n          get: () => {\n            return this._width;\n          },\n          set: v => {\n            this._width = v;\n            this.setupImage();\n          }\n        });\n        this._height = this.getAttr(\"height\", 128);\n        if (!this.hasOwnProperty(\"height\")) Object.defineProperty(this, \"height\", {\n          get: () => {\n            return this._height;\n          },\n          set: v => {\n            this._height = v;\n            this.setupImage();\n          }\n        });\n        this._min = this.getAttr(\"min\", 0);\n        if (!this.hasOwnProperty(\"min\")) Object.defineProperty(this, \"min\", {\n          get: () => {\n            return this._min;\n          },\n          set: v => {\n            this._min = +v;\n            this.redraw();\n          }\n        });\n        this._keys = this.getAttr(\"keys\", 25);\n        if (!this.hasOwnProperty(\"keys\")) Object.defineProperty(this, \"keys\", {\n          get: () => {\n            return this._keys;\n          },\n          set: v => {\n            this._keys = +v;\n            this.setupImage();\n          }\n        });\n        this._colors = this.getAttr(\"colors\", \"#222;#eee;#ccc;#333;#000;#e88;#c44;#c33;#800\");\n        if (!this.hasOwnProperty(\"colors\")) Object.defineProperty(this, \"colors\", {\n          get: () => {\n            return this._colors;\n          },\n          set: v => {\n            this._colors = v;\n            this.setupImage();\n          }\n        });\n        this.outline = this.getAttr(\"outline\", opt.outline);\n        this.midilearn = this.getAttr(\"midilearn\", 0);\n        this.midicc = this.getAttr(\"midicc\", null);\n        this.press = 0;\n        this.keycodes1 = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188, 76, 190, 187, 191, 226];\n        this.keycodes2 = [81, 50, 87, 51, 69, 82, 53, 84, 54, 89, 55, 85, 73, 57, 79, 48, 80, 192, 222, 219];\n        this.addEventListener(\"keyup\", this.keyup);\n        this.midiController = {};\n        this.midiMode = \"normal\";\n        if (this.midicc) {\n          var ch = parseInt(this.midicc.substring(0, this.midicc.lastIndexOf(\".\"))) - 1;\n          var cc = parseInt(this.midicc.substring(this.midicc.lastIndexOf(\".\") + 1));\n          this.setMidiController(ch, cc);\n        }\n        this.setupImage();\n        this.digits = 0;\n        this.addEventListener(\"mousemove\", this.pointermove);\n        this.addEventListener(\"touchmove\", this.pointermove, {\n          passive: false\n        });\n        this.addEventListener(\"mouseup\", this.pointerup);\n        this.addEventListener(\"touchend\", this.pointerup);\n        this.addEventListener(\"touchcancel\", this.pointerup);\n        if (window.webAudioControlsMidiManager)\n          //        window.webAudioControlsMidiManager.updateWidgets();\n          window.webAudioControlsMidiManager.addWidget(this);\n      }\n      disconnectedCallback() {}\n      setupImage() {\n        this.cv.style.width = this.width + \"px\";\n        this.cv.style.height = this.height + \"px\";\n        this.bheight = this.height * 0.55;\n        this.kp = [0, 7 / 12, 1, 3 * 7 / 12, 2, 3, 6 * 7 / 12, 4, 8 * 7 / 12, 5, 10 * 7 / 12, 6];\n        this.kf = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0];\n        this.ko = [0, 0, 7 * 2 / 12 - 1, 0, 7 * 4 / 12 - 2, 7 * 5 / 12 - 3, 0, 7 * 7 / 12 - 4, 0, 7 * 9 / 12 - 5, 0, 7 * 11 / 12 - 6];\n        this.kn = [0, 2, 4, 5, 7, 9, 11];\n        this.coltab = this.colors.split(\";\");\n        this.cv.width = this.width;\n        this.cv.height = this.height;\n        this.cv.style.width = this.width + 'px';\n        this.cv.style.height = this.height + 'px';\n        this.cv.style.outline = this.outline ? \"\" : \"none\";\n        this.bheight = this.height * 0.55;\n        this.max = this.min + this.keys - 1;\n        this.dispvalues = [];\n        this.valuesold = [];\n        if (this.kf[this.min % 12]) --this.min;\n        if (this.kf[this.max % 12]) ++this.max;\n        this.redraw();\n      }\n      redraw() {\n        function rrect(ctx, x, y, w, h, r, c1, c2) {\n          if (c2) {\n            var g = ctx.createLinearGradient(x, y, x + w, y);\n            g.addColorStop(0, c1);\n            g.addColorStop(1, c2);\n            ctx.fillStyle = g;\n          } else ctx.fillStyle = c1;\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + w, y);\n          ctx.lineTo(x + w, y + h - r);\n          ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n          ctx.lineTo(x + r, y + h);\n          ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n          ctx.lineTo(x, y);\n          ctx.fill();\n        }\n        this.ctx.fillStyle = this.coltab[0];\n        this.ctx.fillRect(0, 0, this.width, this.height);\n        var x0 = 7 * (this.min / 12 | 0) + this.kp[this.min % 12];\n        var x1 = 7 * (this.max / 12 | 0) + this.kp[this.max % 12];\n        var n = x1 - x0;\n        this.wwidth = (this.width - 1) / (n + 1);\n        this.bwidth = this.wwidth * 7 / 12;\n        var h2 = this.bheight;\n        var r = Math.min(8, this.wwidth * 0.2);\n        for (var i = this.min, j = 0; i <= this.max; ++i) {\n          if (this.kf[i % 12] == 0) {\n            var x = this.wwidth * j++ + 1;\n            if (this.dispvalues.indexOf(i) >= 0) rrect(this.ctx, x, 1, this.wwidth - 1, this.height - 2, r, this.coltab[5], this.coltab[6]);else rrect(this.ctx, x, 1, this.wwidth - 1, this.height - 2, r, this.coltab[1], this.coltab[2]);\n          }\n        }\n        r = Math.min(8, this.bwidth * 0.3);\n        for (var _i = this.min; _i < this.max; ++_i) {\n          if (this.kf[_i % 12]) {\n            var _x = this.wwidth * this.ko[this.min % 12] + this.bwidth * (_i - this.min) + 1;\n            if (this.dispvalues.indexOf(_i) >= 0) rrect(this.ctx, _x, 1, this.bwidth, h2, r, this.coltab[7], this.coltab[8]);else rrect(this.ctx, _x, 1, this.bwidth, h2, r, this.coltab[3], this.coltab[4]);\n            this.ctx.strokeStyle = this.coltab[0];\n            this.ctx.stroke();\n          }\n        }\n      }\n      _setValue(v) {\n        if (this.step) v = Math.round((v - this.min) / this.step) * this.step + this.min;\n        this._value = Math.min(this.max, Math.max(this.min, v));\n        if (this._value != this.oldvalue) {\n          this.oldvalue = this._value;\n          this.redraw();\n          this.showtip(0);\n          return 1;\n        }\n        return 0;\n      }\n      setValue(v, f) {\n        if (this._setValue(v) && f) this.sendEvent(\"input\"), this.sendEvent(\"change\");\n      }\n      wheel(e) {}\n      keydown(e) {\n        var m = Math.floor((this.min + 11) / 12) * 12;\n        var k = this.keycodes1.indexOf(e.keyCode);\n        if (k < 0) {\n          k = this.keycodes2.indexOf(e.keyCode);\n          if (k >= 0) k += 12;\n        }\n        if (k >= 0) {\n          k += m;\n          if (this.currentKey != k) {\n            this.currentKey = k;\n            this.sendEventFromKey(1, k);\n            this.setNote(1, k);\n          }\n        }\n      }\n      keyup(e) {\n        var m = Math.floor((this.min + 11) / 12) * 12;\n        var k = this.keycodes1.indexOf(e.keyCode);\n        if (k < 0) {\n          k = this.keycodes2.indexOf(e.keyCode);\n          if (k >= 0) k += 12;\n        }\n        if (k >= 0) {\n          k += m;\n          this.currentKey = -1;\n          this.sendEventFromKey(0, k);\n          this.setNote(0, k);\n        }\n      }\n      pointerdown(e) {\n        this.cv.focus();\n        //      document.body.addEventListener('touchstart',this.preventScroll,{passive:false});\n        if (this.enable) {\n          ++this.press;\n          this.pointermove(e);\n        }\n        e.preventDefault();\n      }\n      pointermove(e) {\n        if (!this.enable) return;\n        var r = this.getBoundingClientRect();\n        var v = [],\n          p;\n        if (e.touches) p = e.targetTouches;else if (this.press) p = [e];else p = [];\n        if (p.length > 0) this.drag = 1;\n        for (var i = 0; i < p.length; ++i) {\n          var px = p[i].clientX - r.left;\n          var py = p[i].clientY - r.top;\n          var x = void 0,\n            k = void 0,\n            ko = void 0;\n          if (py < this.bheight) {\n            x = px - this.wwidth * this.ko[this.min % 12];\n            k = this.min + (x / this.bwidth | 0);\n          } else {\n            k = px / this.wwidth | 0;\n            ko = this.kp[this.min % 12];\n            k += ko;\n            k = this.min + (k / 7 | 0) * 12 + this.kn[k % 7] - this.kn[ko % 7];\n          }\n          if (k >= this.min && k <= this.max) v.push(k);\n        }\n        v.sort();\n        this.values = v;\n        this.sendevent();\n        this.redraw();\n      }\n      pointerup(e) {\n        if (this.enable) {\n          --this.press;\n          this.pointermove(e);\n          this.sendevent();\n          this.redraw();\n        }\n        this.drag = 0;\n        e.preventDefault();\n      }\n      sendEventFromKey(s, k) {\n        var ev = document.createEvent('HTMLEvents');\n        ev.initEvent('change', true, true);\n        ev.note = [s, k];\n        this.dispatchEvent(ev);\n      }\n      sendevent() {\n        var notes = [];\n        for (var i = 0, j = this.valuesold.length; i < j; ++i) {\n          if (this.values.indexOf(this.valuesold[i]) < 0) notes.push([0, this.valuesold[i]]);\n        }\n        for (var _i2 = 0, _j = this.values.length; _i2 < _j; ++_i2) {\n          if (this.valuesold.indexOf(this.values[_i2]) < 0) notes.push([1, this.values[_i2]]);\n        }\n        if (notes.length) {\n          this.valuesold = this.values;\n          for (var _i3 = 0; _i3 < notes.length; ++_i3) {\n            this.setdispvalues(notes[_i3][0], notes[_i3][1]);\n            var ev = document.createEvent('HTMLEvents');\n            ev.initEvent('change', true, true);\n            ev.note = notes[_i3];\n            this.dispatchEvent(ev);\n          }\n        }\n      }\n      setdispvalues(state, note) {\n        var n = this.dispvalues.indexOf(note);\n        if (state) {\n          if (n < 0) this.dispvalues.push(note);\n        } else {\n          if (n >= 0) this.dispvalues.splice(n, 1);\n        }\n      }\n      setNote(state, note) {\n        this.setdispvalues(state, note);\n        this.redraw();\n      }\n    });\n  } catch (error) {\n    //console.log(\"webaudio-keyboard already defined\");\n  }\n\n  // FOR MIDI LEARN\n  class WebAudioControlsMidiManager {\n    constructor() {\n      this.midiAccess = null;\n      this.listOfWidgets = [];\n      this.listOfExternalMidiListeners = [];\n      this.updateWidgets();\n      this.initWebAudioControls();\n    }\n    addWidget(w) {\n      this.listOfWidgets.push(w);\n    }\n    updateWidgets() {\n      //      this.listOfWidgets = document.querySelectorAll(\"webaudio-knob,webaudio-slider,webaudio-switch\");\n    }\n    initWebAudioControls() {\n      if (navigator.requestMIDIAccess) {\n        navigator.requestMIDIAccess().then(ma => {\n          this.midiAccess = ma, this.enableInputs();\n        }, err => {\n          console.log(\"MIDI not initialized - error encountered:\" + err.code);\n        });\n      }\n    }\n    enableInputs() {\n      var inputs = this.midiAccess.inputs.values();\n      //console.log(\"Found \" + this.midiAccess.inputs.size + \" MIDI input(s)\");\n      for (var input = inputs.next(); input && !input.done; input = inputs.next()) {\n        //console.log(\"Connected input: \" + input.value.name);\n        input.value.onmidimessage = this.handleMIDIMessage.bind(this);\n      }\n    }\n    midiConnectionStateChange(e) {\n      // console.log(\"connection: \" + e.port.name + \" \" + e.port.connection + \" \" + e.port.state);\n      enableInputs();\n    }\n    onMIDIStarted(midi) {\n      this.midiAccess = midi;\n      midi.onstatechange = this.midiConnectionStateChange;\n      enableInputs(midi);\n    }\n    // Add hooks for external midi listeners support\n    addMidiListener(callback) {\n      this.listOfExternalMidiListeners.push(callback);\n    }\n    getCurrentConfigAsJSON() {\n      return currentConfig.stringify();\n    }\n    handleMIDIMessage(event) {\n      this.listOfExternalMidiListeners.forEach(function (externalListener) {\n        externalListener(event);\n      });\n      if ((event.data[0] & 0xf0) == 0xf0 || (event.data[0] & 0xf0) == 0xb0 && event.data[1] >= 120) return;\n      for (var w of this.listOfWidgets) {\n        if (w.processMidiEvent) w.processMidiEvent(event);\n      }\n      if (opt.mididump) console.log(event.data);\n    }\n    contextMenuOpen(e, knob) {\n      if (!this.midiAccess) return;\n      var menu = document.getElementById(\"webaudioctrl-context-menu\");\n      menu.style.left = e.pageX + \"px\";\n      menu.style.top = e.pageY + \"px\";\n      menu.knob = knob;\n      menu.classList.add(\"active\");\n      menu.knob.focus();\n      //      document.activeElement.onblur=this.contextMenuClose;\n      menu.knob.addEventListener(\"keydown\", this.contextMenuCloseByKey.bind(this));\n    }\n    contextMenuCloseByKey(e) {\n      if (e.keyCode == 27) this.contextMenuClose();\n    }\n    contextMenuClose() {\n      var menu = document.getElementById(\"webaudioctrl-context-menu\");\n      menu.knob.removeEventListener(\"keydown\", this.contextMenuCloseByKey);\n      menu.classList.remove(\"active\");\n      var menuItemLearn = document.getElementById(\"webaudioctrl-context-menu-learn\");\n      menuItemLearn.innerHTML = 'Learn';\n      menu.knob.midiMode = 'normal';\n    }\n    contextMenuLearn() {\n      var menu = document.getElementById(\"webaudioctrl-context-menu\");\n      var menuItemLearn = document.getElementById(\"webaudioctrl-context-menu-learn\");\n      menuItemLearn.innerHTML = 'Listening...';\n      menu.knob.midiMode = 'learn';\n    }\n    contextMenuClear(e) {\n      var menu = document.getElementById(\"webaudioctrl-context-menu\");\n      menu.knob.midiController = {};\n      this.contextMenuClose();\n    }\n  }\n  if (window.UseWebAudioControlsMidi || opt.useMidi) window.webAudioControlsMidiManager = new WebAudioControlsMidiManager();\n}\n\nvar getBaseURL = () => {\n  var base = new URL('.', import.meta.url);\n  return \"\".concat(base);\n};\nclass lowCutGui extends HTMLElement {\n  constructor(plug) {\n    super();\n    _defineProperty(this, \"handleAnimationFrame\", () => {\n      this._root.getElementById('/low-freq_shelving_cut/attenuation').value = this._plug.audioNode.getParamValue('/low-freq_shelving_cut/attenuation');\n      this._root.getElementById('/low-freq_shelving_cut/freq').value = this._plug.audioNode.getParamValue('/low-freq_shelving_cut/freq');\n      window.requestAnimationFrame(this.handleAnimationFrame);\n    });\n    this._plug = plug;\n    this._plug.gui = this;\n    console.log(this._plug);\n    this._root = this.attachShadow({\n      mode: 'open'\n    });\n    this._root.innerHTML = \"<style>.my-pedal {align-content:normal;align-items:normal;align-self:auto;aspect-ratio:auto;backface-visibility:visible;border-collapse:separate;border-image-repeat:stretch;box-decoration-break:slice;box-sizing:border-box;break-inside:auto;caption-side:top;clear:none;color-interpolation:srgb;color-interpolation-filters:linearrgb;column-count:auto;column-fill:balance;column-span:none;contain:none;direction:ltr;display:block;dominant-baseline:auto;empty-cells:show;flex-direction:row;flex-wrap:nowrap;float:none;font-kerning:auto;font-optical-sizing:auto;font-size-adjust:none;font-stretch:100%;font-style:normal;font-synthesis:weight style small-caps;font-variant-caps:normal;font-variant-east-asian:normal;font-variant-ligatures:normal;font-variant-numeric:normal;font-variant-position:normal;font-weight:400;grid-auto-flow:row;hyphens:manual;image-orientation:from-image;image-rendering:auto;ime-mode:auto;isolation:auto;justify-content:normal;justify-items:normal;justify-self:auto;line-break:auto;list-style-position:outside;mask-type:luminance;mix-blend-mode:normal;-moz-box-align:stretch;-moz-box-direction:normal;-moz-box-orient:horizontal;-moz-box-pack:start;-moz-float-edge:content-box;-moz-force-broken-image-icon:0;-moz-orient:inline;-moz-osx-font-smoothing:auto;-moz-text-size-adjust:auto;-moz-user-focus:none;-moz-user-input:auto;-moz-user-modify:read-only;-moz-window-dragging:default;object-fit:fill;offset-rotate:auto;outline-style:none;overflow-anchor:auto;overflow-wrap:normal;paint-order:normal;pointer-events:auto;position:unset;print-color-adjust:economy;resize:none;ruby-align:space-around;ruby-position:alternate;scroll-behavior:auto;scroll-snap-align:none;scroll-snap-stop:normal;scroll-snap-type:none;scrollbar-gutter:auto;scrollbar-width:auto;shape-rendering:auto;stroke-linecap:butt;stroke-linejoin:miter;table-layout:auto;text-align:center;text-align-last:auto;text-anchor:start;text-combine-upright:none;text-decoration-line:none;text-decoration-skip-ink:auto;text-decoration-style:solid;text-emphasis-position:over right;text-justify:auto;text-orientation:mixed;text-rendering:auto;text-transform:none;text-underline-position:auto;touch-action:none;transform-box:border-box;transform-style:flat;unicode-bidi:isolate;user-select:auto;vector-effect:none;visibility:visible;-webkit-line-clamp:none;white-space:normal;word-break:normal;writing-mode:horizontal-tb;z-index:auto;appearance:none;break-after:auto;break-before:auto;clip-rule:nonzero;fill-rule:nonzero;fill-opacity:1;stroke-opacity:1;-moz-box-ordinal-group:1;order:0;flex-grow:0;flex-shrink:1;-moz-box-flex:0;stroke-miterlimit:4;overflow-block:visible;overflow-inline:visible;overflow-x:visible;overflow-y:visible;overscroll-behavior-block:auto;overscroll-behavior-inline:auto;overscroll-behavior-x:auto;overscroll-behavior-y:auto;flood-opacity:1;opacity:1;shape-image-threshold:0;stop-opacity:1;border-block-end-style:solid;border-block-start-style:solid;border-bottom-style:solid;border-inline-end-style:solid;border-inline-start-style:solid;border-left-style:solid;border-right-style:solid;border-top-style:solid;column-rule-style:none;accent-color:auto;animation-delay:0s;animation-direction:normal;animation-duration:0s;animation-fill-mode:none;animation-iteration-count:1;animation-name:none;animation-play-state:running;animation-timing-function:ease;backdrop-filter:none;background-attachment:scroll;background-blend-mode:normal;background-clip:border-box;background-image:none;background-origin:padding-box;background-position-x:0%;background-position-y:0%;background-repeat:repeat;background-size:contain;border-image-outset:0;border-image-slice:100%;border-image-width:1;border-spacing:0px 0px;box-shadow:rgba(0, 0, 0, 0.7) 4px 5px 6px 0px, rgba(0, 0, 0, 0.2) -2px -2px 5px 0px inset, rgba(255, 255, 255, 0.2) 3px 1px 1px 4px inset, rgba(0, 0, 0, 0.9) 1px 0px 1px 0px, rgba(0, 0, 0, 0.9) 0px 2px 1px 0px, rgba(0, 0, 0, 0.9) 1px 1px 1px 0px;caret-color:rgb(33, 37, 41);clip-path:none;color:rgb(33, 37, 41);color-scheme:normal;column-width:auto;content:normal;counter-increment:none;counter-reset:none;counter-set:none;cursor:auto;d:none;filter:none;flex-basis:auto;font-family:-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";font-feature-settings:normal;font-language-override:normal;font-size:16px;font-variant-alternates:normal;font-variation-settings:normal;grid-template-areas:none;hyphenate-character:auto;letter-spacing:normal;line-height:24px;list-style-type:disc;mask-clip:border-box;mask-composite:add;mask-image:none;mask-mode:match-source;mask-origin:border-box;mask-position-x:0%;mask-position-y:0%;mask-repeat:repeat;mask-size:auto;offset-anchor:auto;offset-path:none;perspective:none;quotes:auto;rotate:none;scale:none;scrollbar-color:auto;shape-outside:none;stroke-dasharray:none;stroke-dashoffset:0px;stroke-width:1px;tab-size:8;text-decoration-thickness:auto;text-emphasis-style:none;text-overflow:clip;text-shadow:none;transition-delay:0s;transition-duration:0s;transition-property:all;transition-timing-function:ease;translate:none;vertical-align:baseline;will-change:auto;word-spacing:0px;clip:auto;-moz-image-region:auto;object-position:50% 50%;perspective-origin:43px 123.25px;fill:rgb(0, 0, 0);stroke:none;transform-origin:43px 123.25px;grid-template-columns:none;grid-template-rows:none;border-image-source:none;list-style-image:none;grid-auto-columns:auto;grid-auto-rows:auto;transform:none;column-gap:normal;row-gap:normal;marker-end:none;marker-mid:none;marker-start:none;grid-column-end:auto;grid-column-start:auto;grid-row-end:auto;grid-row-start:auto;max-block-size:none;max-height:none;max-inline-size:none;max-width:none;cx:0px;cy:0px;offset-distance:0px;text-indent:0px;x:0px;y:0px;border-bottom-left-radius:15px;border-bottom-right-radius:15px;border-end-end-radius:15px;border-end-start-radius:15px;border-start-end-radius:15px;border-start-start-radius:15px;border-top-left-radius:15px;border-top-right-radius:15px;block-size:246.5px;height:246.5px;inline-size:86px;min-block-size:0px;min-height:0px;min-inline-size:0px;min-width:0px;width:86px;padding-block-end:1px;padding-block-start:1px;padding-bottom:1px;padding-inline-end:1px;padding-inline-start:1px;padding-left:1px;padding-right:1px;padding-top:1px;r:0px;shape-margin:0px;rx:auto;ry:auto;scroll-padding-block-end:auto;scroll-padding-block-start:auto;scroll-padding-bottom:auto;scroll-padding-inline-end:auto;scroll-padding-inline-start:auto;scroll-padding-left:auto;scroll-padding-right:auto;scroll-padding-top:auto;border-block-end-width:1px;border-block-start-width:1px;border-bottom-width:1px;border-inline-end-width:1px;border-inline-start-width:1px;border-left-width:1px;border-right-width:1px;border-top-width:1px;column-rule-width:0px;outline-width:0px;-webkit-text-stroke-width:0px;outline-offset:0px;overflow-clip-margin:0px;scroll-margin-block-end:0px;scroll-margin-block-start:0px;scroll-margin-bottom:0px;scroll-margin-inline-end:0px;scroll-margin-inline-start:0px;scroll-margin-left:0px;scroll-margin-right:0px;scroll-margin-top:0px;bottom:124.217px;inset-block-end:124.217px;inset-block-start:58.2833px;inset-inline-end:925px;inset-inline-start:212px;left:212px;margin-block-end:2px;margin-block-start:2px;margin-bottom:2px;margin-inline-end:2px;margin-inline-start:2px;margin-left:2px;margin-right:2px;margin-top:2px;right:925px;text-underline-offset:auto;top:58.2833px;background-color:rgb(128, 128, 128);border-block-end-color:rgb(73, 73, 73);border-block-start-color:rgb(73, 73, 73);border-bottom-color:rgb(73, 73, 73);border-inline-end-color:rgb(73, 73, 73);border-inline-start-color:rgb(73, 73, 73);border-left-color:rgb(73, 73, 73);border-right-color:rgb(73, 73, 73);border-top-color:rgb(73, 73, 73);column-rule-color:rgb(33, 37, 41);flood-color:rgb(0, 0, 0);lighting-color:rgb(255, 255, 255);outline-color:rgb(33, 37, 41);stop-color:rgb(0, 0, 0);text-decoration-color:rgb(33, 37, 41);text-emphasis-color:rgb(33, 37, 41);-webkit-text-fill-color:rgb(33, 37, 41);-webkit-text-stroke-color:rgb(33, 37, 41);background:rgb(128, 128, 128) 0% 0% / contain;background-position:0% 0%;border-color:rgb(73, 73, 73);border-style:solid;border-width:1px;border-top:1px solid rgb(73, 73, 73);border-right:1px solid rgb(73, 73, 73);border-bottom:1px solid rgb(73, 73, 73);border-left:1px solid rgb(73, 73, 73);border-block-start:1px solid rgb(73, 73, 73);border-block-end:1px solid rgb(73, 73, 73);border-inline-start:1px solid rgb(73, 73, 73);border-inline-end:1px solid rgb(73, 73, 73);border:1px solid rgb(73, 73, 73);border-radius:15px;border-image:none 100% / 1 / 0 stretch;border-block-width:1px;border-block-style:solid;border-block-color:rgb(73, 73, 73);border-inline-width:1px;border-inline-style:solid;border-inline-color:rgb(73, 73, 73);border-block:1px solid rgb(73, 73, 73);border-inline:1px solid rgb(73, 73, 73);overflow:visible;overscroll-behavior:auto;page-break-before:auto;page-break-after:auto;page-break-inside:auto;offset:none;columns:auto auto;column-rule:3px none rgb(33, 37, 41);font:400 16px / 1.5 -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\";font-variant:normal;marker:none;text-emphasis:none rgb(33, 37, 41);-webkit-text-stroke:0px rgb(33, 37, 41);list-style:outside;margin:2px;margin-block:2px;margin-inline:2px;scroll-margin:0px;scroll-margin-block:0px;scroll-margin-inline:0px;outline:rgb(33, 37, 41) 0px;padding:1px;padding-block:1px;padding-inline:1px;scroll-padding:auto;scroll-padding-block:auto;scroll-padding-inline:auto;flex-flow:row nowrap;flex:0 1 auto;gap:normal;grid-row:auto;grid-column:auto;grid-area:auto;grid-template:none;grid:none;place-content:normal;place-self:auto;place-items:normal legacy;inset:58.2833px auto auto 212px;inset-block:58.2833px auto;inset-inline:212px auto;mask:none;mask-position:0% 0%;text-decoration:rgb(33, 37, 41);transition:all 0s ease 0s;animation:0s ease 0s 1 normal none running none;-webkit-background-clip:border-box;-webkit-background-origin:padding-box;-webkit-background-size:contain;-moz-border-start-color:rgb(73, 73, 73);-moz-border-start-style:solid;-moz-border-start-width:1px;-moz-border-end-color:rgb(73, 73, 73);-moz-border-end-style:solid;-moz-border-end-width:1px;-webkit-border-top-left-radius:15px;-webkit-border-top-right-radius:15px;-webkit-border-bottom-right-radius:15px;-webkit-border-bottom-left-radius:15px;-moz-transform:none;-webkit-transform:none;-moz-perspective:none;-webkit-perspective:none;-moz-perspective-origin:43px 123.25px;-webkit-perspective-origin:43px 123.25px;-moz-backface-visibility:visible;-webkit-backface-visibility:visible;-moz-transform-style:flat;-webkit-transform-style:flat;-moz-transform-origin:43px 123.25px;-webkit-transform-origin:43px 123.25px;-moz-appearance:none;-webkit-appearance:none;-webkit-box-shadow:rgba(0, 0, 0, 0.7) 4px 5px 6px 0px, rgba(0, 0, 0, 0.2) -2px -2px 5px 0px inset, rgba(255, 255, 255, 0.2) 3px 1px 1px 4px inset, rgba(0, 0, 0, 0.9) 1px 0px 1px 0px, rgba(0, 0, 0, 0.9) 0px 2px 1px 0px, rgba(0, 0, 0, 0.9) 1px 1px 1px 0px;-webkit-filter:none;-moz-font-feature-settings:normal;-moz-font-language-override:normal;color-adjust:economy;-moz-hyphens:manual;-webkit-text-size-adjust:auto;word-wrap:normal;-moz-tab-size:8;-moz-margin-start:2px;-moz-margin-end:2px;-moz-padding-start:1px;-moz-padding-end:1px;-webkit-flex-direction:row;-webkit-flex-wrap:nowrap;-webkit-justify-content:normal;-webkit-align-content:normal;-webkit-align-items:normal;-webkit-flex-grow:0;-webkit-flex-shrink:1;-webkit-align-self:auto;-webkit-order:0;-webkit-flex-basis:auto;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;grid-column-gap:normal;grid-row-gap:normal;-webkit-mask-repeat:repeat;-webkit-mask-position-x:0%;-webkit-mask-position-y:0%;-webkit-mask-clip:border-box;-webkit-mask-origin:border-box;-webkit-mask-size:auto;-webkit-mask-composite:add;-webkit-mask-image:none;-moz-user-select:auto;-webkit-user-select:auto;-moz-transition-duration:0s;-webkit-transition-duration:0s;-moz-transition-timing-function:ease;-webkit-transition-timing-function:ease;-moz-transition-property:all;-webkit-transition-property:all;-moz-transition-delay:0s;-webkit-transition-delay:0s;-moz-animation-name:none;-webkit-animation-name:none;-moz-animation-duration:0s;-webkit-animation-duration:0s;-moz-animation-timing-function:ease;-webkit-animation-timing-function:ease;-moz-animation-iteration-count:1;-webkit-animation-iteration-count:1;-moz-animation-direction:normal;-webkit-animation-direction:normal;-moz-animation-play-state:running;-webkit-animation-play-state:running;-moz-animation-fill-mode:none;-webkit-animation-fill-mode:none;-moz-animation-delay:0s;-webkit-animation-delay:0s;-webkit-box-align:stretch;-webkit-box-direction:normal;-webkit-box-flex:0;-webkit-box-orient:horizontal;-webkit-box-pack:start;-webkit-box-ordinal-group:1;-moz-border-start:1px solid rgb(73, 73, 73);-moz-border-end:1px solid rgb(73, 73, 73);-webkit-border-radius:15px;-moz-border-image:none 100% / 1 / 0 stretch;-webkit-border-image:none 100% / 1 / 0 stretch;-webkit-flex-flow:row nowrap;-webkit-flex:0 1 auto;grid-gap:normal;-webkit-mask:none;-webkit-mask-position:0% 0%;-moz-transition:all 0s ease 0s;-webkit-transition:all 0s ease 0s;-moz-animation:0s ease 0s 1 normal none running none;-webkit-animation:0s ease 0s 1 normal none running none;};</style>\\n<div id=\\\"lowCut\\\" style=\\\"border: 1px solid rgb(73, 73, 73); text-align: center; display: inline-block; vertical-align: baseline; padding: 1px; margin: 2px; box-sizing: border-box; background-size: contain; box-shadow: rgba(0, 0, 0, 0.7) 4px 5px 6px, rgba(0, 0, 0, 0.2) -2px -2px 5px 0px inset, rgba(255, 255, 255, 0.2) 3px 1px 1px 4px inset, rgba(0, 0, 0, 0.9) 1px 0px 1px 0px, rgba(0, 0, 0, 0.9) 0px 2px 1px 0px, rgba(0, 0, 0, 0.9) 1px 1px 1px 0px; border-radius: 15px; background-color: grey; touch-action: none; width: 86px; position: relative; top: 0px; left: 0px; height: 246.5px;\\\" class=\\\"resize-drag my-pedal\\\"><div style=\\\"padding: 1px; margin: 1px; text-align: center; display: inline-block; box-sizing: border-box; touch-action: none; position: absolute; top: 81px; left: 1px; width: 87.5333px; height: 79.25px;\\\" class=\\\"drag\\\"><webaudio-knob id=\\\"/low-freq_shelving_cut/attenuation\\\" style=\\\"touch-action: none; display: block;\\\" src=\\\"./img/knobs/MiniMoog_Main.png\\\" sprites=\\\"100\\\" min=\\\"-96\\\" max=\\\"10\\\" step=\\\"0.1\\\" width=\\\"40\\\" height=\\\"40\\\"><style>\\n\\n.webaudioctrl-tooltip{\\n  display:inline-block;\\n  position:absolute;\\n  margin:0 -1000px;\\n  z-index: 999;\\n  background:#eee;\\n  color:#000;\\n  border:1px solid #666;\\n  border-radius:4px;\\n  padding:5px 10px;\\n  text-align:center;\\n  left:0; top:0;\\n  font-size:11px;\\n  opacity:0;\\n  visibility:hidden;\\n}\\n.webaudioctrl-tooltip:before{\\n  content: \\\"\\\";\\n\\tposition: absolute;\\n\\ttop: 100%;\\n\\tleft: 50%;\\n \\tmargin-left: -8px;\\n\\tborder: 8px solid transparent;\\n\\tborder-top: 8px solid #666;\\n}\\n.webaudioctrl-tooltip:after{\\n  content: \\\"\\\";\\n\\tposition: absolute;\\n\\ttop: 100%;\\n\\tleft: 50%;\\n \\tmargin-left: -6px;\\n\\tborder: 6px solid transparent;\\n\\tborder-top: 6px solid #eee;\\n}\\n\\nwebaudio-knob{\\n  display:inline-block;\\n  position:relative;\\n  margin:0;\\n  padding:0;\\n  cursor:pointer;\\n  font-family: sans-serif;\\n  font-size: 11px;\\n}\\n.webaudio-knob-body{\\n  display:inline-block;\\n  position:relative;\\n  z-index:1;\\n  margin:0;\\n  padding:0;\\n}\\n</style>\\n<div class=\\\"webaudio-knob-body\\\" tabindex=\\\"1\\\" touch-action=\\\"none\\\" style=\\\"background-image: url(&quot;./img/knobs/MiniMoog_Main.png&quot;); background-size: 40px 4040px; outline: none; width: 40px; height: 40px; background-position: 0px -3600px; transform: rotate(0deg);\\\"></div><div class=\\\"webaudioctrl-tooltip\\\"></div>\\n</webaudio-knob></div><div style=\\\"padding: 1px; margin: 1px; text-align: center; display: inline-block; box-sizing: border-box; touch-action: none; position: absolute; top: 162.25px; left: 20px; width: 42px; height: 79.25px;\\\" class=\\\"drag\\\"><webaudio-knob id=\\\"/low-freq_shelving_cut/freq\\\" style=\\\"touch-action: none; display: block;\\\" src=\\\"./img/knobs/MiniMoog_Main.png\\\" sprites=\\\"100\\\" min=\\\"20\\\" max=\\\"5000\\\" step=\\\"1\\\" width=\\\"40\\\" height=\\\"40\\\"><style>\\n\\n.webaudioctrl-tooltip{\\n  display:inline-block;\\n  position:absolute;\\n  margin:0 -1000px;\\n  z-index: 999;\\n  background:#eee;\\n  color:#000;\\n  border:1px solid #666;\\n  border-radius:4px;\\n  padding:5px 10px;\\n  text-align:center;\\n  left:0; top:0;\\n  font-size:11px;\\n  opacity:0;\\n  visibility:hidden;\\n}\\n.webaudioctrl-tooltip:before{\\n  content: \\\"\\\";\\n\\tposition: absolute;\\n\\ttop: 100%;\\n\\tleft: 50%;\\n \\tmargin-left: -8px;\\n\\tborder: 8px solid transparent;\\n\\tborder-top: 8px solid #666;\\n}\\n.webaudioctrl-tooltip:after{\\n  content: \\\"\\\";\\n\\tposition: absolute;\\n\\ttop: 100%;\\n\\tleft: 50%;\\n \\tmargin-left: -6px;\\n\\tborder: 6px solid transparent;\\n\\tborder-top: 6px solid #eee;\\n}\\n\\nwebaudio-knob{\\n  display:inline-block;\\n  position:relative;\\n  margin:0;\\n  padding:0;\\n  cursor:pointer;\\n  font-family: sans-serif;\\n  font-size: 11px;\\n}\\n.webaudio-knob-body{\\n  display:inline-block;\\n  position:relative;\\n  z-index:1;\\n  margin:0;\\n  padding:0;\\n}\\n</style>\\n<div class=\\\"webaudio-knob-body\\\" tabindex=\\\"1\\\" touch-action=\\\"none\\\" style=\\\"background-image: url(&quot;./img/knobs/MiniMoog_Main.png&quot;); background-size: 40px 4040px; outline: none; width: 40px; height: 40px; background-position: 0px 0px; transform: rotate(0deg);\\\"></div><div class=\\\"webaudioctrl-tooltip\\\"></div>\\n</webaudio-knob></div><label for=\\\"low-freq shelving cut\\\" style=\\\"display: block; touch-action: none; position: absolute; z-index: 1; width: 82px; left: 2px; top: 4.28334px; border: medium none;\\\" class=\\\"drag target-style-label\\\" contenteditable=\\\"false\\\">low-freq shelving cut</label><label for=\\\"attenuation\\\" style=\\\"text-align: center; display: block; touch-action: none; position: absolute; z-index: 1; width: 85.5333px; left: 4px; top: 131.533px;\\\" class=\\\"drag\\\" contenteditable=\\\"false\\\">attenuation</label><label for=\\\"freq\\\" style=\\\"text-align: center; display: block; touch-action: none; position: absolute; z-index: 1; width: 40px; left: 23px; top: 212.783px;\\\" class=\\\"drag\\\" contenteditable=\\\"false\\\">freq</label></div>\";\n    this.isOn;\n    this.state = new Object();\n    this.setKnobs();\n    this.setSliders();\n    this.setSwitches();\n    //this.setSwitchListener();\n    this.setInactive();\n    // Change #pedal to .my-pedal for use the new builder\n    this._root.querySelector('.my-pedal').style.transform = 'none';\n    //this._root.querySelector(\"#test\").style.fontFamily = window.getComputedStyle(this._root.querySelector(\"#test\")).getPropertyValue('font-family');\n\n    // Compute base URI of this main.html file. This is needed in order\n    // to fix all relative paths in CSS, as they are relative to\n    // the main document, not the plugin's main.html\n    this.basePath = getBaseURL();\n    console.log(\"basePath = \" + this.basePath);\n\n    // Fix relative path in WebAudio Controls elements\n    this.fixRelativeImagePathsInCSS();\n\n    // optionnal : set image background using a relative URI (relative\n    // to this file)\n    //this.setImageBackground(\"/img/BigMuffBackground.png\");\n\n    // Monitor param changes in order to update the gui\n    window.requestAnimationFrame(this.handleAnimationFrame);\n  }\n  fixRelativeImagePathsInCSS() {\n    // change webaudiocontrols relative paths for spritesheets to absolute\n    var webaudioControls = this._root.querySelectorAll('webaudio-knob, webaudio-slider, webaudio-switch, img');\n    webaudioControls.forEach(e => {\n      var currentImagePath = e.getAttribute('src');\n      if (currentImagePath !== undefined) {\n        //console.log(\"Got wc src as \" + e.getAttribute(\"src\"));\n        var imagePath = e.getAttribute('src');\n        e.setAttribute('src', this.basePath + '/' + imagePath);\n        //console.log(\"After fix : wc src as \" + e.getAttribute(\"src\"));\n      }\n    });\n\n    var sliders = this._root.querySelectorAll('webaudio-slider');\n    sliders.forEach(e => {\n      var currentImagePath = e.getAttribute('knobsrc');\n      if (currentImagePath !== undefined) {\n        var imagePath = e.getAttribute('knobsrc');\n        e.setAttribute('knobsrc', this.basePath + '/' + imagePath);\n      }\n    });\n\n    // BMT Get all fonts\n    // Need to get the attr font\n    var usedFonts = \"\";\n    var fonts = this._root.querySelectorAll('label[font]');\n    fonts.forEach(e => {\n      if (!usedFonts.includes(e.getAttribute(\"font\"))) usedFonts += \"family=\" + e.getAttribute(\"font\") + \"&\";\n    });\n    var link = document.createElement('link');\n    link.rel = \"stylesheet\";\n    if (usedFonts.slice(0, -1)) link.href = \"https://fonts.googleapis.com/css2?\" + usedFonts.slice(0, -1) + \"&display=swap\";\n    document.querySelector('head').appendChild(link);\n\n    // BMT Adapt for background-image\n    var divs = this._root.querySelectorAll('div');\n    divs.forEach(e => {\n      if ('background-image' in e.style) {\n        var currentImagePath = e.style.backgroundImage.slice(4, -1);\n        if (currentImagePath !== undefined) {\n          var imagePath = e.style.backgroundImage.slice(5, -2);\n          if (imagePath != \"\") e.style.backgroundImage = 'url(' + this.basePath + '/' + imagePath + ')';\n        }\n      }\n    });\n  }\n  setImageBackground() {\n    // check if the shadowroot host has a background image\n    var mainDiv = this._root.querySelector('#main');\n    mainDiv.style.backgroundImage = 'url(' + this.basePath + '/' + imageRelativeURI + ')';\n\n    //console.log(\"background =\" + mainDiv.style.backgroundImage);\n    //this._root.style.backgroundImage = \"toto.png\";\n  }\n\n  attributeChangedCallback() {\n    console.log('Custom element attributes changed.');\n    this.state = JSON.parse(this.getAttribute('state'));\n    var tmp = '/PingPongDelayFaust/bypass';\n    if (this.state[tmp] == 1) {\n      this._root.querySelector('#switch1').value = 0;\n      this.isOn = false;\n    } else if (this.state[tmp] == 0) {\n      this._root.querySelector('#switch1').value = 1;\n      this.isOn = true;\n    }\n    this.knobs = this._root.querySelectorAll('.knob');\n    console.log(this.state);\n    for (var i = 0; i < this.knobs.length; i++) {\n      this.knobs[i].setValue(this.state[this.knobs[i].id], false);\n      console.log(this.knobs[i].value);\n    }\n  }\n  get properties() {\n    this.boundingRect = {\n      dataWidth: {\n        type: Number,\n        value: null\n      },\n      dataHeight: {\n        type: Number,\n        value: null\n      }\n    };\n    return this.boundingRect;\n  }\n  static get observedAttributes() {\n    return ['state'];\n  }\n  setKnobs() {\n    this._root.getElementById(\"/low-freq_shelving_cut/attenuation\").addEventListener(\"input\", e => this._plug.audioNode.setParamValue(\"/low-freq_shelving_cut/attenuation\", e.target.value));\n    this._root.getElementById(\"/low-freq_shelving_cut/freq\").addEventListener(\"input\", e => this._plug.audioNode.setParamValue(\"/low-freq_shelving_cut/freq\", e.target.value));\n  }\n  setSliders() {}\n  setSwitches() {}\n  setInactive() {\n    var switches = this._root.querySelectorAll(\".switch webaudio-switch\");\n    switches.forEach(s => {\n      console.log(\"### SWITCH ID = \" + s.id);\n      this._plug.audioNode.setParamValue(s.id, 0);\n    });\n  }\n}\ntry {\n  customElements.define('wap-lowcut', lowCutGui);\n  console.log(\"Element defined\");\n} catch (error) {\n  console.log(error);\n  console.log(\"Element already defined\");\n}\n\n/**\n * A mandatory method if you want a gui for your plugin\n * @param {WebAudioModule} plugin - the plugin instance\n * @returns {Elem} - the HTML element that contains the GUI\n */\nfunction createElement(_x) {\n  return _createElement.apply(this, arguments);\n}\nfunction _createElement() {\n  _createElement = _asyncToGenerator(function* (plugin) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    // here we return the WebComponent GUI but it could be\n    // any DOM node\n    return new lowCutGui(plugin, ...args);\n  });\n  return _createElement.apply(this, arguments);\n}\n\nclass lowCutNode extends CompositeAudioNode {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"_wamNode\", void 0);\n  }\n  setup(output, paramMgr) {\n    this.connect(output, 0, 0);\n    paramMgr.addEventListener('wam-midi', e => output.midiMessage(e.detail.data.bytes));\n    this._wamNode = paramMgr;\n    this._output = output;\n  }\n  destroy() {\n    super.destroy();\n    if (this._output) this._output.destroy();\n  }\n  getParamValue(name) {\n    return this._wamNode.getParamValue(name);\n  }\n  setParamValue(name, value) {\n    return this._wamNode.setParamValue(name, value);\n  }\n}\nvar getBasetUrl = relativeURL => {\n  var baseURL = relativeURL.href.substring(0, relativeURL.href.lastIndexOf('/'));\n  return baseURL;\n};\n\n// Definition of a new plugin\nclass lowCutPlugin extends WebAudioModule {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"_PluginFactory\", void 0);\n    _defineProperty(this, \"_baseURL\", getBasetUrl(new URL('.', import.meta.url)));\n    _defineProperty(this, \"_descriptorUrl\", this._baseURL + \"/descriptor.json\");\n  }\n  _loadDescriptor() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var url = _this._descriptorUrl;\n      if (!url) throw new TypeError('Descriptor not found');\n      var response = yield fetch(url);\n      var descriptor = yield response.json();\n      Object.assign(_this.descriptor, descriptor);\n    })();\n  }\n  initialize(state) {\n    var _superprop_getInitialize = () => super.initialize,\n      _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2._loadDescriptor();\n      var imported = yield fetchModule('./Node.js');\n      _this2._PluginFactory = imported[Object.keys(imported)[0]];\n      return _superprop_getInitialize().call(_this2, state);\n    })();\n  }\n\n  // The plugin redefines the async method createAudionode()\n  // that must return an <Audionode>\n  // It also listen to plugin state change event to update the audionode internal state\n  createAudioNode(initialState) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      var factory = new _this3._PluginFactory(_this3.audioContext, _this3._baseURL);\n      var faustNode = yield factory.load();\n      var paramMgrNode = yield ParamMgrFactory.create(_this3, {\n        internalParamsConfig: Object.fromEntries(faustNode.parameters)\n      });\n      var node = new lowCutNode(_this3.audioContext);\n      node.setup(faustNode, paramMgrNode);\n      if (initialState) node.setState(initialState);\n      return node;\n    })();\n  }\n  createGui() {\n    return createElement(this);\n  }\n}\n\nexport { lowCutPlugin as default };\n//# sourceMappingURL=index.js.map\n"],"names":["WebAudioModule","isWebAudioModuleConstructor","createInstance","groupId","audioContext","initialState","initialize","constructor","_groupId","_audioContext","_initialized","_audioNode","undefined","_timestamp","performance","now","_guiModuleUrl","_descriptorUrl","_descriptor","name","vendor","description","version","apiVersion","thumbnail","keywords","isInstrument","website","hasAudioInput","hasAudioOutput","hasAutomationInput","hasAutomationOutput","hasMidiInput","hasMidiOutput","hasMpeInput","hasMpeOutput","hasOscInput","hasOscOutput","hasSysexInput","hasSysexOutput","isWebAudioModule","moduleId","instanceId","descriptor","audioNode","initialized","console","warn","node","value","createAudioNode","TypeError","state","_this","_loadGui","url","_this2","_loadDescriptor","_this3","response","fetch","json","Object","assign","createGui","_this4","createElement","destroyGui"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA,MAAMA,cAAc,CAAC;AACpB,EAAA,WAAWC,2BAA2B,GAAG;AACxC,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;;AAEA;AACD;AACA;AACA;AACA;AACA;AACC,EAAA,OAAOC,cAAc,CAACC,OAAO,EAAEC,YAAY,EAAEC,YAAY,EAAE;IAC1D,OAAO,IAAI,IAAI,CAACF,OAAO,EAAEC,YAAY,CAAC,CAACE,UAAU,CAACD,YAAY,CAAC,CAAA;AAChE,GAAA;;AAEA;AACD;AACA;AACA;AACCE,EAAAA,WAAW,CAACJ,OAAO,EAAEC,YAAY,EAAE;IAClC,IAAI,CAACI,QAAQ,GAAGL,OAAO,CAAA;IACvB,IAAI,CAACM,aAAa,GAAGL,YAAY,CAAA;IACjC,IAAI,CAACM,YAAY,GAAG,KAAK,CAAA;AACzB;IACA,IAAI,CAACC,UAAU,GAAGC,SAAS,CAAA;AAC3B,IAAA,IAAI,CAACC,UAAU,GAAGC,WAAW,CAACC,GAAG,EAAE,CAAA;AACnC;AACF;AACA;AACA;IACE,IAAI,CAACC,aAAa,GAAGJ,SAAS,CAAA;AAC9B;AACF;AACA;AACA;IACE,IAAI,CAACK,cAAc,GAAG,mBAAmB,CAAA;AACzC;IACA,IAAI,CAACC,WAAW,GAAG;AAClBC,MAAAA,IAAI,2BAAoB,IAAI,CAACZ,WAAW,CAACY,IAAI,CAAE;AAC/CC,MAAAA,MAAM,EAAE,sBAAsB;AAC9BC,MAAAA,WAAW,EAAE,EAAE;AACfC,MAAAA,OAAO,EAAE,OAAO;AAChBC,MAAAA,UAAU,EAAE,OAAO;AACnBC,MAAAA,SAAS,EAAE,EAAE;AACbC,MAAAA,QAAQ,EAAE,EAAE;AACZC,MAAAA,YAAY,EAAE,KAAK;AACnBC,MAAAA,OAAO,EAAE,EAAE;AACXC,MAAAA,aAAa,EAAE,IAAI;AACnBC,MAAAA,cAAc,EAAE,IAAI;AACpBC,MAAAA,kBAAkB,EAAE,IAAI;AACxBC,MAAAA,mBAAmB,EAAE,IAAI;AACzBC,MAAAA,YAAY,EAAE,IAAI;AAClBC,MAAAA,aAAa,EAAE,IAAI;AACnBC,MAAAA,WAAW,EAAE,IAAI;AACjBC,MAAAA,YAAY,EAAE,IAAI;AAClBC,MAAAA,WAAW,EAAE,IAAI;AACjBC,MAAAA,YAAY,EAAE,IAAI;AAClBC,MAAAA,aAAa,EAAE,IAAI;AACnBC,MAAAA,cAAc,EAAE,IAAA;AAChB,KAAA,CAAA;AACF,GAAA;AAEA,EAAA,IAAIC,gBAAgB,GAAG;AACtB,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AAEA,EAAA,IAAIrC,OAAO,GAAG;IAAE,OAAO,IAAI,CAACK,QAAQ,CAAA;AAAE,GAAA;AAEtC,EAAA,IAAIiC,QAAQ,GAAG;AAAE,IAAA,OAAO,IAAI,CAACrB,MAAM,GAAG,IAAI,CAACD,IAAI,CAAA;AAAE,GAAA;AAEjD,EAAA,IAAIuB,UAAU,GAAG;AAAE,IAAA,OAAO,IAAI,CAACD,QAAQ,GAAG,IAAI,CAAC5B,UAAU,CAAA;AAAE,GAAA;AAE3D,EAAA,IAAI8B,UAAU,GAAG;IAAE,OAAO,IAAI,CAACzB,WAAW,CAAA;AAAE,GAAA;AAE5C,EAAA,IAAIC,IAAI,GAAG;AAAE,IAAA,OAAO,IAAI,CAACwB,UAAU,CAACxB,IAAI,CAAA;AAAE,GAAA;AAE1C,EAAA,IAAIC,MAAM,GAAG;AAAE,IAAA,OAAO,IAAI,CAACuB,UAAU,CAACvB,MAAM,CAAA;AAAE,GAAA;AAE9C,EAAA,IAAIhB,YAAY,GAAG;IAClB,OAAO,IAAI,CAACK,aAAa,CAAA;AAC1B,GAAA;AAEA,EAAA,IAAImC,SAAS,GAAG;IACf,IAAI,CAAC,IAAI,CAACC,WAAW,EAAEC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC,CAAA;IAC7F,OAAO,IAAI,CAACpC,UAAU,CAAA;AACvB,GAAA;EAEA,IAAIiC,SAAS,CAACI,IAAI,EAAE;IACnB,IAAI,CAACrC,UAAU,GAAGqC,IAAI,CAAA;AACvB,GAAA;AAEA,EAAA,IAAIH,WAAW,GAAG;IACjB,OAAO,IAAI,CAACnC,YAAY,CAAA;AACzB,GAAA;EAEA,IAAImC,WAAW,CAACI,KAAK,EAAE;IACtB,IAAI,CAACvC,YAAY,GAAGuC,KAAK,CAAA;AAC1B,GAAA;;AAEA;AACD;AACA;AACA;EACOC,eAAe,CAAC7C,YAAY,EAAE;AAAA,IAAA,OAAA,iBAAA,CAAA,aAAA;AACnC;AACA,MAAA,MAAM,IAAI8C,SAAS,CAAC,gCAAgC,CAAC,CAAA;AAAC,KAAA,CAAA,EAAA,CAAA;AACvD,GAAA;;AAEA;AACD;AACA;AACA;EACO7C,UAAU,CAAC8C,KAAK,EAAE;AAAA,IAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AAAA,IAAA,OAAA,iBAAA,CAAA,aAAA;AACvB;AACA,MAAA,IAAI,CAACC,KAAI,CAAC1C,UAAU,EAAE0C,KAAI,CAACT,SAAS,GAAS,MAAA,KAAI,CAACM,eAAe,EAAE,CAAA;MACnEG,KAAI,CAACR,WAAW,GAAG,IAAI,CAAA;AACvB,MAAA,OAAOQ,KAAI,CAAA;AAAC,KAAA,CAAA,EAAA,CAAA;AACb,GAAA;AAEMC,EAAAA,QAAQ,GAAG;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AAAA,IAAA,OAAA,iBAAA,CAAA,aAAA;AAChB,MAAA,IAAMC,GAAG,GAAGC,MAAI,CAACxC,aAAa,CAAA;MAC9B,IAAI,CAACuC,GAAG,EAAE,MAAM,IAAIJ,SAAS,CAAC,sBAAsB,CAAC,CAAA;AACrD;MACA,OAAO,iCAAgCI,GAAG,CAAC,CAAA;AAAC,KAAA,CAAA,EAAA,CAAA;AAC7C,GAAA;AAEME,EAAAA,eAAe,GAAG;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AAAA,IAAA,OAAA,iBAAA,CAAA,aAAA;AACvB,MAAA,IAAMF,GAAG,GAAGG,MAAI,CAACzC,cAAc,CAAA;MAC/B,IAAI,CAACsC,GAAG,EAAE,MAAM,IAAIJ,SAAS,CAAC,sBAAsB,CAAC,CAAA;AACrD,MAAA,IAAMQ,QAAQ,GAAA,MAASC,KAAK,CAACL,GAAG,CAAC,CAAA;AACjC,MAAA,IAAMZ,UAAU,GAAA,MAASgB,QAAQ,CAACE,IAAI,EAAE,CAAA;MACxCC,MAAM,CAACC,MAAM,CAACL,MAAI,CAACxC,WAAW,EAAEyB,UAAU,CAAC,CAAA;MAC3C,OAAOe,MAAI,CAACxC,WAAW,CAAA;AAAC,KAAA,CAAA,EAAA,CAAA;AACzB,GAAA;;AAEA;AACD;AACA;AACO8C,EAAAA,SAAS,GAAG;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;AAAA,IAAA,OAAA,iBAAA,CAAA,aAAA;MACjB,IAAI,CAACC,MAAI,CAACpB,WAAW,EAAEC,OAAO,CAACC,IAAI,CAAC,qDAAqD,CAAC,CAAA;AAC1F;AACA,MAAA,IAAI,CAACkB,MAAI,CAACjD,aAAa,EAAE,OAAOJ,SAAS,CAAA;MACzC,IAAM;AAAEsD,QAAAA,aAAAA;AAAc,OAAC,GAAS,MAAA,MAAI,CAACZ,QAAQ,EAAE,CAAA;MAC/C,OAAOY,aAAa,CAACD,MAAI,CAAC,CAAA;AAAC,KAAA,CAAA,EAAA,CAAA;AAC5B,GAAA;AAEAE,EAAAA,UAAU,GAAG,EAAA;AACd}